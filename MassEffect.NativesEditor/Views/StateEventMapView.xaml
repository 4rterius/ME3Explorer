<UserControl x:Class="MassEffect.NativesEditor.Views.StateEventMapView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:cal="http://www.caliburnproject.org"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:data="clr-namespace:MassEffect.Windows.Data;assembly=MassEffect.Windows"
	xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:markup="clr-namespace:MassEffect.Windows.Markup;assembly=MassEffect.Windows"
	xmlns:system="clr-namespace:System;assembly=mscorlib"
	xmlns:stateEventMap="clr-namespace:Gammtek.Conduit.MassEffect3.SFXGame.StateEventMap;assembly=Gammtek.Conduit.MassEffect3"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:viewModels="clr-namespace:MassEffect.NativesEditor.ViewModels"
	xmlns:local="clr-namespace:MassEffect.NativesEditor"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance Type=viewModels:StateEventMapViewModel, IsDesignTimeCreatable=True}"
	d:DesignHeight="600" d:DesignWidth="800"
	cal:Bind.AtDesignTime="True">
	<!-- UserControl Resources -->
	<UserControl.Resources>
		<Style TargetType="{x:Type ListBox}" x:Key="ListBoxStyle">
			<Style.Triggers>
				<Trigger Property="HasItems" Value="True">
					<Setter Property="SelectedIndex" Value="0" />
				</Trigger>
				<Trigger Property="HasItems" Value="False">
					<Setter Property="SelectedIndex" Value="-1" />
				</Trigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>

	<!-- Content -->
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!-- State Event Map ListBox -->
		<ListBox x:Name="StateEventMapListBox" Grid.Column="0" Grid.Row="0" Width="150" Style="{DynamicResource ListBoxStyle}"
			ItemsSource="{Binding StateEvents, NotifyOnTargetUpdated=True}" SelectedItem="{Binding SelectedStateEvent, Mode=TwoWay}">
			<!-- Resources -->
			<ListBox.ItemTemplate>
				<!--<DataTemplate DataType="{x:Type stateEventMap:BioStateEvent}">-->
				<DataTemplate>
					<TextBlock Text="{Binding Key, StringFormat='State Event: \{0\}'}" />
				</DataTemplate>
			</ListBox.ItemTemplate>

			<ListBox.ItemContainerStyle>
				<Style TargetType="ListBoxItem">
					<Setter Property="Tag" Value="{Binding DataContext, ElementName=StateEventMapListBox}" />
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
								<MenuItem Header="Change Id" cal:Message.Attach="ChangeStateEventId()" />
								<MenuItem Header="Copy" cal:Message.Attach="CopyStateEvent()" />
								<MenuItem Header="Remove" cal:Message.Attach="RemoveStateEvent()" />
							</ContextMenu>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.ItemContainerStyle>

			<!--<i:Interaction.Behaviors>
				<local:ListBoxSelectedItemsBehavior />
			</i:Interaction.Behaviors>-->
		</ListBox>

		<!-- State Event Map Buttons -->
		<Grid Grid.Column="0" Grid.Row="1" Margin="0,5,0,0">
			<!-- Grid Definitions -->
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="5" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>

			<!-- Grid Content -->
			<Button Grid.Column="0" Grid.Row="0" Content="Add"
				cal:Message.Attach="AddStateEvent()" />

			<Button Grid.Column="2" Grid.Row="0" Content="Remove"
				cal:Message.Attach="RemoveStateEvent()" />
		</Grid>

		<!-- State Event Map Entry Grid -->
		<Grid x:Name="StateEventMapEntryGrid" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Margin="5,0,0,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<!-- State Event Properties -->
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<Label Grid.ColumnSpan="2"
					Content="State Event Properties:" />
			</Grid>

			<!-- State Event Map State Event -->
			<Grid Grid.Column="0" Grid.Row="1">
				<!-- Column / Row Definitions -->
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<!-- State Event Elements ListBox -->
				<ListBox x:Name="StateEventElementsListBox" Width="150" Style="{DynamicResource ListBoxStyle}"
					ItemsSource="{Binding SelectedStateEvent.Value.Elements, NotifyOnTargetUpdated=True}"
					SelectedItem="{Binding SelectedStateEventElement, Mode=TwoWay}">
					<!-- Resources -->
					<ListBox.Resources>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementBool}">
							<TextBlock Text="Bool" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementConsequence}">
							<TextBlock Text="Consequence" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementFloat}">
							<TextBlock Text="Float" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementFunction}">
							<TextBlock Text="Function" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementInt}">
							<TextBlock Text="Int" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalBool}">
							<TextBlock Text="Local Bool" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalFloat}">
							<TextBlock Text="Local Float" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementLocalInt}">
							<TextBlock Text="Local Int" />
						</DataTemplate>
						<DataTemplate DataType="{x:Type stateEventMap:BioStateEventElementSubstate}">
							<TextBlock Text="Substate" />
						</DataTemplate>
					</ListBox.Resources>

					<ListBox.ItemContainerStyle>
						<Style TargetType="ListBoxItem">
							<Setter Property="Tag" Value="{Binding DataContext, ElementName=StateEventElementsListBox}" />
							<Setter Property="ContextMenu">
								<Setter.Value>
									<ContextMenu cal:Action.TargetWithoutContext="{Binding PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
										<MenuItem Header="Copy" cal:Message.Attach="CopyStateEventElement()" />
										<MenuItem Header="Remove" cal:Message.Attach="RemoveStateEventElement()" />
									</ContextMenu>
								</Setter.Value>
							</Setter>
						</Style>
					</ListBox.ItemContainerStyle>

					<!--<i:Interaction.Behaviors>
						<local:ListBoxSelectedItemsBehavior />
					</i:Interaction.Behaviors>-->
				</ListBox>

				<!-- New State Event Element ComboBox -->
				<ComboBox x:Name="NewStateEventElementComboBox" Grid.Column="0" Grid.Row="1" Margin="0,5,0,0"
					Tag="{Binding SelectedItem.Tag, RelativeSource={RelativeSource Self}}">
					<ComboBoxItem Content="Bool" Tag="{x:Static stateEventMap:BioStateEventElementType.Bool}" IsSelected="True" />
					<ComboBoxItem Content="Consequence" Tag="{x:Static stateEventMap:BioStateEventElementType.Consequence}" />
					<ComboBoxItem Content="Float" Tag="{x:Static stateEventMap:BioStateEventElementType.Float}" />
					<ComboBoxItem Content="Function" Tag="{x:Static stateEventMap:BioStateEventElementType.Function}" />
					<ComboBoxItem Content="Int" Tag="{x:Static stateEventMap:BioStateEventElementType.Int}" />
					<ComboBoxItem Content="Local Bool" Tag="{x:Static stateEventMap:BioStateEventElementType.LocalBool}" />
					<ComboBoxItem Content="Local Float" Tag="{x:Static stateEventMap:BioStateEventElementType.LocalFloat}" />
					<ComboBoxItem Content="Local Int" Tag="{x:Static stateEventMap:BioStateEventElementType.LocalInt}" />
					<ComboBoxItem Content="Substate" Tag="{x:Static stateEventMap:BioStateEventElementType.Substate}" />
				</ComboBox>

				<!-- State Event Element Buttons -->
				<Grid Grid.Column="0" Grid.Row="2" Margin="0,5,0,0">
					<!-- Grid Definitions -->
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="5" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<!-- Grid Content -->
					<Button Grid.Column="0" Grid.Row="0" Content="Add"
						cal:Message.Attach="AddStateEventElement(NewStateEventElementComboBox.Tag)" />

					<Button Grid.Column="2" Grid.Row="0" Content="Remove"
						cal:Message.Attach="RemoveStateEventElement()" />
				</Grid>

				<!-- Selected State Event Element StackPanel -->
				<TabControl Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Margin="5,0,5,0" BorderThickness="0">
					<!-- Resources -->
					<TabControl.Resources>
						<Style TargetType="TabItem">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="TabItem" />
								</Setter.Value>
							</Setter>
						</Style>
					</TabControl.Resources>

					<!-- TabItems -->
					<TabItem Header="Empty" IsSelected="True" />

					<!-- Boolean Event Element -->
					<TabItem Header="BioStateEventElementBool"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementBool}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!-- Global Bool -->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Global Bool"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementBool.GlobalBool), Mode=TwoWay}"
								HorizontalAlignment="Left" Margin="5,5" Minimum="0" VerticalAlignment="Center" Width="150" />

							<!-- New State -->
							<Label Grid.Column="0" Grid.Row="1"
								Content="New Value"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

							<ComboBox Grid.Column="1" Grid.Row="1"
								SelectedIndex="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementBool.NewState), 
									Mode=TwoWay, Converter={markup:TypeConverter system:Boolean, system:Int32}}"
								HorizontalAlignment="Left" Margin="5,5" VerticalAlignment="Center" Width="150">
								<ComboBoxItem Content="False" />
								<ComboBoxItem Content="True" />
							</ComboBox>

							<!-- Use Param -->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Use Param"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementBool.UseParam), Mode=TwoWay}"
								HorizontalAlignment="Left" Margin="5,5" VerticalAlignment="Center" Width="150" />

							<!-- Instance Version -->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Instance Version"
								HorizontalAlignment="Left" Margin="0,5" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementBool.InstanceVersion), Mode=TwoWay}"
								HorizontalAlignment="Left" Margin="5,5" VerticalAlignment="Center" Width="150" />
						</Grid>
					</TabItem>

					<!-- Consequence Event Element -->
					<TabItem Header="BioStateEventElementConsequence"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementConsequence}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!-- Consequence -->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Consequence" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementConsequence.Consequence), Mode=TwoWay}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!-- Instance Version -->
							<Label Grid.Column="0" Grid.Row="1"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementConsequence.InstanceVersion), Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>

					<!-- Float Event Element -->
					<TabItem Header="BioStateEventElementFloat"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementFloat}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!---->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Global Float" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFloat.GlobalFloat), Mode=TwoWay}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:SingleUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFloat.NewValue), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" ParsingNumberStyle="Float" />

							<!---->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Increment" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFloat.Increment), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="3"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFloat.UseParam), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="4"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="4"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFloat.InstanceVersion), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>

					<!-- Function Event Element -->
					<TabItem Header="BioStateEventElementFunction"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementFunction}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!---->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Function Package (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFunction.FunctionPackageName), Mode=TwoWay}" Width="150"
								Margin="5,5" Minimum="0"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="1"
								Content="Function Class (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFunction.FunctionClassName), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Function Name (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="2"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFunction.FunctionName), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Parameter" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFunction.Parameter), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="4"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="4"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementFunction.InstanceVersion), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>

					<!-- Integer Event Element -->
					<TabItem Header="BioStateEventElementInt"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementInt}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!---->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Global Int" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementInt.GlobalInt), Mode=TwoWay}" Width="150" Margin="5,5"
								Minimum="0"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementInt.NewValue), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Increment" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementInt.Increment), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="3"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementInt.UseParam), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="4"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="4"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementInt.InstanceVersion), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>

					<!-- Local Bool Event Element -->
					<TabItem Header="BioStateEventElementLocalBool"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementLocalBool}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!---->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Function Name (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalBool.FunctionName), Mode=TwoWay}" Width="150"
								Margin="5,5" Minimum="0"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<ComboBox Grid.Column="1" Grid.Row="1"
								SelectedIndex="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalBool.NewValue), Mode=TwoWay, Converter={markup:TypeConverter system:Boolean, system:Int32}}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center">

								<ComboBoxItem Content="False" />
								<ComboBoxItem Content="True" />
							</ComboBox>

							<!---->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Object Tag (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalBool.ObjectTag), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Object Type (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalBool.ObjectType), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="4"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="4"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalBool.UseParam), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="5"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="5"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalBool.InstanceVersion), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>

					<!-- Local Float Event Element -->
					<TabItem Header="BioStateEventElementLocalFloat"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementLocalFloat}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!---->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Function Name (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalFloat.FunctionName), Mode=TwoWay}" Width="150"
								Margin="5,5" Minimum="0"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="1"
								Content="New Value" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:SingleUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalFloat.NewValue), Mode=TwoWay}" Width="150" Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Object Tag (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalFloat.ObjectTag), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Object Type (Index)" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalFloat.ObjectType), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="4"
								Content="Use Param" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="4"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalFloat.UseParam), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="5"
								Content="Instance Version" Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="5"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalFloat.InstanceVersion), Mode=TwoWay}" Width="150"
								Margin="5,5"
								HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>

					<!-- Local Int Event Element -->
					<TabItem Header="BioStateEventElementLocalInt"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementLocalInt}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!---->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Function Name (Index)"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalInt.FunctionName), Mode=TwoWay}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="1"
								Content="New Value"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="1"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalInt.NewValue), Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Object Tag (Index)"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="2"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalInt.ObjectTag), Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Object Type (Index)"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="3"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalInt.ObjectType), Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="4"
								Content="Use Param"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="4"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalInt.UseParam), Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!---->
							<Label Grid.Column="0" Grid.Row="5"
								Content="Instance Version"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="5"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementLocalInt.InstanceVersion), Mode=TwoWay}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>

					<!-- Substate Event Element -->
					<TabItem Header="BioStateEventElementSubstate"
						IsSelected="{Binding SelectedStateEventElement, Converter={data:TypeOfConverter {x:Type stateEventMap:BioStateEventElementSubstate}}, FallbackValue=False}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<!-- Global Bool -->
							<Label Grid.Column="0" Grid.Row="0"
								Content="Global Bool"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="0"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementSubstate.GlobalBool), Mode=TwoWay}"
								Width="150" Margin="5,5" Minimum="0" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!-- New State -->
							<Label Grid.Column="0" Grid.Row="1"
								Content="New State"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<ComboBox Grid.Column="1" Grid.Row="1"
								SelectedIndex="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementSubstate.NewState), Mode=TwoWay, Converter={markup:TypeConverter system:Boolean, system:Int32}}"
								Width="150" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center">

								<ComboBoxItem Content="False" />
								<ComboBoxItem Content="True" />
							</ComboBox>

							<!-- Parent Index -->
							<Label Grid.Column="0" Grid.Row="2"
								Content="Parent Index"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="2"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementSubstate.ParentIndex), Mode=TwoWay}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!-- Parent Type Or (Needs new name) -->
							<Label Grid.Column="0" Grid.Row="3"
								Content="Parent Type Or"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="3"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementSubstate.ParentTypeOr), Mode=TwoWay}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!-- Sibling Indicies -->
							<Label Grid.Column="0" Grid.Row="4"
								Content="Sibling Indicies"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<Grid Grid.Column="1" Grid.Row="4" Margin="0,5,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<ListBox x:Name="SubstateStateEventSiblingIndicesListBox" Grid.Column="0" Grid.Row="0"
									ItemsSource="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementSubstate.SiblingIndices)}"
									Width="150" Height="60" Margin="5,5" HorizontalAlignment="Left" VerticalAlignment="Center">
									<!--<i:Interaction.Behaviors>
										<local:ListBoxSelectedItemsBehavior />
									</i:Interaction.Behaviors>-->
								</ListBox>

								<Grid Grid.Column="0" Grid.Row="1" Width="150" Margin="5,5">
									<!-- Grid Definitions -->
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="5" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<!-- Grid Content -->
									<Button Grid.Column="0" Grid.Row="0" Content="Add"
										cal:Message.Attach="AddSubstateSiblingIndex()" />

									<Button Grid.Column="2" Grid.Row="0" Content="Remove"
										cal:Message.Attach="RemoveSubstateSiblingIndex(SubstateStateEventSiblingIndicesListBox.SelectedIndex)">
										<Button.Style>
											<Style TargetType="Button">
												<Style.Triggers>
													<DataTrigger Binding="{Binding ElementName=SubstateStateEventSiblingIndicesListBox, Path=SelectedIndex}" Value="-1">
														<Setter Property="IsEnabled" Value="False" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>
								</Grid>
							</Grid>

							<!-- Use Param -->
							<Label Grid.Column="0" Grid.Row="5"
								Content="Use Param"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<CheckBox Grid.Column="1" Grid.Row="5"
								IsChecked="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementSubstate.UseParam), Mode=TwoWay}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<!-- Instance Version -->
							<Label Grid.Column="0" Grid.Row="6"
								Content="Instance Version"
								Margin="0,5" HorizontalAlignment="Left" VerticalAlignment="Center" />

							<xctk:IntegerUpDown Grid.Column="1" Grid.Row="6"
								Text="{Binding Path=SelectedStateEventElement.(stateEventMap:BioStateEventElementSubstate.InstanceVersion), Mode=TwoWay}"
								Margin="5,5" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" />
						</Grid>
					</TabItem>
				</TabControl>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
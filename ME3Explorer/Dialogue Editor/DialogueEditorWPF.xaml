<global:WPFBase
    xmlns:global="clr-namespace:ME3Explorer" x:Class="ME3Explorer.Dialogue_Editor.DialogueEditorWPF"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:unreal="clr-namespace:ME3Explorer.Unreal"
        xmlns:local="clr-namespace:ME3Explorer.Dialogue_Editor"
        xmlns:SharedUI="clr-namespace:ME3Explorer.SharedUI"
        xmlns:Converters="clr-namespace:ME3Explorer.SharedUI.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Loaded="DialogueEditorWPF_Loaded"
        Closing="DialogueEditorWPF_Closing"
        Title="Dialogue Editor WPF" Height="750" Width="1300" MinWidth="900" MinHeight="200"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <Converters:GameTypeConverter x:Key="GameTypeConverter"/>
        <Converters:BoolToIndexConverter x:Key="BoolToIndexConverter"/>
        <ContextMenu x:Key="startnodeContextMenu" Closed="ContextMenu_Closed">
            <MenuItem Header="Add new start node" Command="{Binding StartAddCommand}" CommandParameter="Add" ToolTip="Create a new start node"/>
            <MenuItem Header="Edit" Command="{Binding StartEditCommand}" CommandParameter="Edit" ToolTip="Edit which dialogue entry this node connects to."/>
            <MenuItem Header="Remove start node" Command="{Binding StartDeleteCommand}" ToolTip="Delete this start node"/>
        </ContextMenu>
        <ContextMenu x:Key="replynodeContextMenu" Closed="ContextMenu_Closed">
            <MenuItem Header="Add Reply" Command="{Binding NodeAddCommand}" CommandParameter="AddReply" ToolTip="Create a new clean reply"/>
            <MenuItem Header="Clone Reply" Command="{Binding NodeAddCommand}" CommandParameter="CloneReply" ToolTip="Create a new reply as a duplicate of this one"/>
            <Separator />
            <MenuItem Header="Break Links" Name="breakLinksMenuItem">
                <MenuItem Header="Output Links" Name="outputLinksMenuItem"></MenuItem>
                <MenuItem Header="Break All Links" Name="breakAllLinksMenuItem" Command="{Binding NodeDeleteAllLinksCommand}" IsEnabled="{Binding SelectedDialogueNode, Converter={StaticResource NullEnabledConverter}}"/>
            </MenuItem>
            <MenuItem Header="Remove from Dialogue" Command="{Binding NodeRemoveCommand}"/>
        </ContextMenu>
        <ContextMenu x:Key="entrynodeContextMenu" Closed="ContextMenu_Closed">
            <MenuItem Header="Add Entry" Command="{Binding NodeAddCommand}" CommandParameter="AddEntry" ToolTip="Create a new clean entry"/>
            <MenuItem Header="Clone Entry" Command="{Binding NodeAddCommand}" CommandParameter="CloneEntry" ToolTip="Create a new entry as a duplicate of this one"/>
            <Separator />
            <MenuItem Header="Break Links" Name="ebreakLinksMenuItem">
                <MenuItem Header="Output Links" Name="eoutputLinksMenuItem"></MenuItem>
                <MenuItem Header="Break All Links" Name="ebreakAllLinksMenuItem" Command="{Binding NodeDeleteAllLinksCommand}" IsEnabled="{Binding SelectedDialogueNode, Converter={StaticResource NullEnabledConverter}}"/>
            </MenuItem>
            <MenuItem Header="Remove from Dialogue" Command="{Binding NodeRemoveCommand}"/>
        </ContextMenu>
        <system:Boolean x:Key="True">True</system:Boolean>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="L" Modifiers="Control"  Command="{Binding AutoLayoutCommand}"/>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="{Binding SaveAsCommand}"/>
        <KeyBinding Key="G" Modifiers="Control" Command="{Binding GotoCommand}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" HorizontalAlignment="Stretch">
            <MenuItem Header="File" Padding="4" >
                <MenuItem Header="_Open" Command="{Binding OpenCommand}" InputGestureText="Ctrl+O" ToolTip="Open a package file"/>
                <MenuItem Header="_Save"  Command="{Binding SaveCommand}" InputGestureText="Ctrl+S" ToolTip="Save package file in-place" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"/>
                <MenuItem Header="Save as" Command="{Binding SaveAsCommand}" InputGestureText="Ctrl+Shift+S" ToolTip="Save package file to another location" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"/>
                <MenuItem Header="Open in...">
                    <MenuItem Header="FaceFX Editor" Command="{Binding OpenInCommand}" CommandParameter="FaceFXEditor"  IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/facefxeditor_256x256.ico" Width="64"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Package Editor" Command="{Binding OpenInCommand}" CommandParameter="PackageEditor" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/packageeditorwpf_256x256.ico" Width="64"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Sequence Editor" Command="{Binding OpenInCommand}" CommandParameter="SequenceEditor" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/sequenceeditor_256x256.ico" Width="64"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Soundplorer WPF" Command="{Binding OpenInCommand}" CommandParameter="SoundplorerWPF" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/soundplorerwpf_256x256.ico" Width="64"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <Separator />
                <MenuItem Name="Recents_MenuItem" Header="Recent" IsEnabled="false"/>
            </MenuItem>

            <MenuItem Header="Tools" Padding="4">
                <MenuItem Header="Manage TLKs" Command="{Binding LoadTLKManagerCommand}" ToolTip="Load TLK Manager"/>
                <MenuItem Header="Save Image" Command="{Binding SaveImageCommand}" ToolTip="Save image of full Dialogue"/>
                <MenuItem Header="Test for looping paths" Command="{Binding TestPathsCommand}" ToolTip="Test the dialogue for looping paths." IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}"/>
                <Separator/>
                <MenuItem Header="Add New Start" Command="{Binding StartAddCommand}" CommandParameter="Add" ToolTip="Create a new start node" IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}"/>
                <MenuItem Header="Add New Entry" Command="{Binding NodeAddCommand}" CommandParameter="AddEntry" ToolTip="Add new entry to this Dialogue" IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}"/>
                <MenuItem Header="Add New Reply" Command="{Binding NodeAddCommand}" CommandParameter="AddReply" ToolTip="Add new reply to this Dialogue" IsEnabled="{Binding SelectedConv, Converter={StaticResource NullEnabledConverter}}"/>
            </MenuItem>

            <MenuItem Header="View Options" Padding="4">
                <MenuItem Header="Adjust spoken line text size" ToolTip="Adjust the size of the spoken line text beside the title box.">
                    <MenuItem Name="Menu_LineSize_00" Header="Turned off" IsCheckable="True" Command="{Binding ChangeLineSizeCommand}" CommandParameter="00"/>
                    <MenuItem Name="Menu_LineSize_10" Header="1.0 (default)" IsCheckable="True" Command="{Binding ChangeLineSizeCommand}" CommandParameter="10"/>
                    <MenuItem Name="Menu_LineSize_15" Header="1.5" IsCheckable="True" Command="{Binding ChangeLineSizeCommand}" CommandParameter="15"/>
                    <MenuItem Name="Menu_LineSize_20" Header="2.0" IsCheckable="True" Command="{Binding ChangeLineSizeCommand}" CommandParameter="20"/>
                </MenuItem>
                <MenuItem Header="Adjust graph color settings" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140" />
                            <ColumnDefinition Width="60" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Spoken Text: " Grid.Column="0" Grid.Row="0"/>
                        <xctk:ColorPicker Name="ClrPcker_Line" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Right"  Grid.Column="1" Grid.Row="0"></xctk:ColorPicker>
                    </Grid>
                    <Separator/>
                    <TextBlock Text="Entry outline: "/>
                        <xctk:ColorPicker Name="ClrPcker_Entry" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch"></xctk:ColorPicker>
                    <TextBlock Text="Entry Header: "/>
                    <xctk:ColorPicker Name="ClrPcker_EntryHead" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch"></xctk:ColorPicker>
                    <TextBlock Text="Reply outline: "/>
                    <xctk:ColorPicker Name="ClrPcker_Reply" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch"></xctk:ColorPicker>
                    <TextBlock Text="Reply Header: "/>
                    <xctk:ColorPicker Name="ClrPcker_ReplyHead" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch"></xctk:ColorPicker>
                       <Separator/>

                    <DockPanel ToolTip="Adjust the color of the spoken line text beside the title box.">
                        <TextBlock Text=""/>
                    </DockPanel>
                    <Separator/>
                    <StackPanel Orientation="Horizontal" ToolTip="Adjust the color of Paragon Interrupt.">
                        <TextBlock Text="Paragon Interrupt: " />
                        <xctk:ColorPicker Name="ClrPcker_ParaInt" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch" ></xctk:ColorPicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" ToolTip="Adjust the color of Paragon Interrupt.">
                        <TextBlock Text="Renegade Interrupt: " />
                        <xctk:ColorPicker Name="ClrPcker_RenInt" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch" ></xctk:ColorPicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" ToolTip="Adjust the color of Paragon Interrupt.">
                        <TextBlock Text="Agree: " />
                        <xctk:ColorPicker Name="ClrPcker_Agree" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch" ></xctk:ColorPicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" ToolTip="Adjust the color of Paragon Interrupt.">
                        <TextBlock Text="Disagree: " />
                        <xctk:ColorPicker Name="ClrPcker_Disagree" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch" ></xctk:ColorPicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" ToolTip="Adjust the color of Paragon Interrupt.">
                        <TextBlock Text="Friendly response: " />
                        <xctk:ColorPicker Name="ClrPcker_Friendly" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch" ></xctk:ColorPicker>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" ToolTip="Adjust the color of Paragon Interrupt.">
                        <TextBlock Text="Hostile response: " />
                        <xctk:ColorPicker Name="ClrPcker_Hostile" SelectedColorChanged="ChangeLineColor" HorizontalAlignment="Stretch" ></xctk:ColorPicker>
                    </StackPanel>
                </MenuItem>
                <MenuItem Name="ShowOutputNumbers_MenuItem" Header="NOT YET: Show Output Numbers" IsCheckable="True" Click="showOutputNumbers_Click"/>

            </MenuItem>
            <MenuItem Header="Layout" Padding="4">
                <MenuItem Header="Save Current View" Command="{Binding SaveViewCommand}" ToolTip="Save the node layout"/>
                <Separator/>
                <MenuItem Name="AutoSaveView_MenuItem" Header="Auto-Save View" IsCheckable="True"/>
                <MenuItem Name="GlobalSeqRefViewSavesMenuItem" Header="Use Global View Saves" IsCheckable="True" Click="GlobalSeqRefViewSavesMenuItem_OnClick"/>
                <MenuItem Header="Re-Run Auto Layout" Command="{Binding AutoLayoutCommand}" InputGestureText="Ctrl+L" ToolTip="Attempt to layout sequence objects in a comprehensible fashion"/>
            </MenuItem>
            <ComboBox Name="GotoBox" Text="Go to:" ItemsSource="{Binding CurrentObjects}" DisplayMemberPath="ListName" IsEditable="True" SelectionChanged="GotoBox_SelectionChanged" ToolTip="Pick a Node to go to" IsEnabled="true" Width="260" HorizontalAlignment="Stretch" Visibility="{Binding SelectedConv, Converter={StaticResource NullVisibilityConverter}}"/>
        </Menu>
        <StatusBar Height="23" DockPanel.Dock="Bottom">
            <SharedUI:StatusBarGameIDIndicator Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"
                                             GameType="{Binding Pcc, Converter={StaticResource GameTypeConverter}}" Margin="0,-4"/>
            <StatusBarItem>
                <TextBlock Name="StatusBar_LeftMostText" Text="{Binding StatusText}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Name="StatusBar_RightSide_LastSaved" Text="{Binding Pcc.LastSaved, StringFormat='Last saved at {0}'}" Foreground="Gray"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <!-- Main Content panel-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="5"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="0" Name="RightBarColumn" />
            </Grid.ColumnDefinitions>
<!-- Right side panel - Convo/Speakers/Nodes -->
            <DockPanel Name="RightSide_Dock" Grid.Column="2" Grid.RowSpan="2" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
           <!--Convo Panel-->
                <StackPanel Name="Convo_Panel" DockPanel.Dock="Top" IsEnabled="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="3" Visibility="Collapsed">
                    <TextBlock  Name="ConvoDet_Header" Text="Conversation Details"  HorizontalAlignment="Left" FontWeight="Bold" FontSize="18" DockPanel.Dock="Top"/>
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="Export:"  HorizontalAlignment="Stretch" TextAlignment="Right" FontWeight="Bold" FontSize="15" DockPanel.Dock="Left"/>
                        <TextBlock Name="Convo_UID" Text="{Binding Path=SelectedConv.ExportUID}"  HorizontalAlignment="Right" FontWeight="Bold" FontSize="18" DockPanel.Dock="Right"/>
                    </DockPanel>
                    <TextBlock Name="Convo_NamePrefix" Text="Name:" HorizontalAlignment="Left" FontWeight="Bold" FontSize="10"  />
                    <TextBlock Name="Convo_Name"  Text="{Binding Path=SelectedConv.ConvName}"  HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="20" TextWrapping="Wrap" TextAlignment="Left" />
                    <TextBlock Text="" FontSize="10"  />
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Name="LevelHeader" Text="Level:"  HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="File with the Persistant level that uses the conversation" DockPanel.Dock="Left" FontWeight="Bold" FontSize="15"/>
                        <Grid DockPanel.Dock="Right" MaxWidth="50">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition Width="25" />
                            </Grid.ColumnDefinitions>
                            <Button Name="OpenLevelPackEd_Button" Grid.Column="0" Command="{Binding OpenInCommand}" CommandParameter="PackEdLvl" Padding="3" ToolTip="Open the Actor's level in Package Editor">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="Cube" Width="16" Height="16" Foreground="DarkBlue"/>
                                </Button.Content>
                            </Button>
                            <Button Name="OpenLevelSeqEd_Button" Grid.Column="1" Command="{Binding OpenInCommand}" CommandParameter="SeqEdLvl" Padding="3" ToolTip="Open the Actor's level in Sequence Editor">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="CodeFork" Width="16" Height="16" Foreground="DarkBlue"/>
                                </Button.Content>
                            </Button>
                        </Grid>
                        <TextBlock Text=""/>
                    </DockPanel>
                    <TextBlock Name="Level_Textbox" Text="{Binding Level}"  HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="File with the Persistant level that uses the conversation" FontSize="15"/>
                    <TextBlock Text="" />
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="Dialogue Sequence:" Name="Data" VerticalAlignment="Bottom" HorizontalAlignment="Left" ToolTip="Sequence for this conversation." DockPanel.Dock="Left" FontWeight="Bold" FontSize="15"/>
                        <Button Name="OpenSeqEd_Button" Command="{Binding OpenInCommand}" CommandParameter="SeqEdNode" Padding="3" DockPanel.Dock="Right" ToolTip="Open this dialogue's sequence" >
                                <Button.Content>
                                <fa:ImageAwesome Icon="CodeFork" Width="16" Height="16" Foreground="DarkBlue"/>
                                </Button.Content>
                            </Button>
                        <TextBlock Text="" FontSize="10" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Name="SequenceUID_TextBox" Text="{Binding Path=SelectedConv.Sequence.UIndex}" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Main conversation sequence" FontSize="15" DockPanel.Dock="Left" Margin="3"/>
                        <TextBlock Name="Sequence_TextBox" Text="{Binding Path=SelectedConv.Sequence.ObjectName}" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Main conversation sequence" FontSize="15" Margin="3"/>
                    </DockPanel>
                    <TextBlock Text="" FontSize="10"  />
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="Wwisebank:"  HorizontalAlignment="Left" VerticalAlignment="Bottom"  ToolTip="Main conversation Wwisebank" DockPanel.Dock="Left" FontWeight="Bold" FontSize="15"/>
                        <Button Name="OpenWWbnk_Button" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand_Wwbank}" CommandParameter="SoundP_Bank" ToolTip="Open in Soundplorer">
                            <Button.Content>
                                <fa:ImageAwesome Icon="VolumeUp" Width="16" Height="16" Foreground="DarkBlue"/>
                            </Button.Content>
                        </Button>
                        <TextBlock Text="" FontSize="10"/>
                    </DockPanel>
                    <StackPanel Name="Wwisebank_Stack" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Main conversation audiobank">
                        <TextBlock Text="{Binding Path=SelectedConv.WwiseBank.UIndex}" HorizontalAlignment="Left" ToolTip="Main conversation audiobank" FontSize="15" Margin="3"/>
                        <TextBlock Text="{Binding Path=SelectedConv.WwiseBank.ObjectName, TargetNullValue=None, FallbackValue=None}" HorizontalAlignment="Left" ToolTip="Main conversation audiobank" FontSize="15" Margin="3"/>
                    </StackPanel>
                    <TextBlock Text="" FontSize="10"  />
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="Non-Speaker FaceFX:"  HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Conversation animations for non-speakers" DockPanel.Dock="Left" FontWeight="Bold" FontSize="15"/>
                        <Button Name="OpenFFX_Button" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand_FFXNS}" CommandParameter="FaceFXNS" ToolTip="Open Non-speaker's AnimSet in FaceFX Editor">
                            <Button.Content>
                                <fa:ImageAwesome Icon="SmileOutline" Width="16" Height="16" Foreground="DarkBlue"/>
                            </Button.Content>
                        </Button>
                        <TextBlock Text=""/>
                    </DockPanel>
                    <ComboBox Name="ComboBox_Conv_NSFFX" ItemsSource="{Binding Path=FFXAnimsets}" SelectedItem="{Binding Path=SelectedConv.NonSpkrFFX}" HorizontalAlignment="Stretch" ToolTip="Conversation animations for non-speakers" Margin="3" DropDownClosed="Convo_NSFFX_DropDownClosed">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=ObjectName}" FontStretch="Condensed"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="31"/>
                            <ColumnDefinition Width="31"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Scripted Events:"  HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Scripted Events that can be called from lines to start new sequences." FontWeight="Bold" FontSize="15"/>
                        <Button Name="ScriptAddButton" Command="{Binding ScriptAddCommand}" CommandParameter="Add" Padding="3"  Grid.Column="1" Margin="2" ToolTip="Add a new script">
                            <Button.Content>
                                <fa:ImageAwesome Icon="PlusCircle" Width="16" Height="16" Foreground="DarkBlue"/>
                            </Button.Content>
                        </Button>
                        <Button Name="ScriptDeleteButton" Command="{Binding ScriptDeleteCommand}" Padding="3"  Grid.Column="2" Margin="2" ToolTip="Delete selected script">
                            <Button.Content>
                                <fa:ImageAwesome Icon="MinusCircle" Width="16" Height="16" Foreground="DarkBlue"/>
                            </Button.Content>
                        </Button>
                    </Grid>
                    <ListBox Name="Script_ListBox" ItemsSource="{Binding Path=SelectedConv.ScriptList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.VerticalScrollBarVisibility="Visible">

                    </ListBox>

                </StackPanel>
           <!--Speaker Panel-->
                <StackPanel Name="Speaker_Panel" DockPanel.Dock="Top" HorizontalAlignment="Stretch" Margin="3" Visibility="Hidden">
                    <TextBlock Text="Speaker Details"  HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" FontSize="18" DockPanel.Dock="Left"/>
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Name="Speaker_ID" Text="{Binding Path=SelectedSpeaker.SpeakerID, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Right" FontWeight="Bold" FontSize="18" DockPanel.Dock="Right" Padding="5"/>
                        <TextBlock Text="ID:" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextAlignment="Right" FontWeight="Bold" FontSize="15"/>
                    </DockPanel>
                    <TextBlock Text="Actor's Tag:" HorizontalAlignment="Left" FontWeight="Bold" FontSize="15"  />
                    <TextBox Name="TextBox_Speaker_Name"  Text="{Binding Path=SelectedSpeaker.SpeakerName, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="20" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" KeyUp="EnterName_Speaker_KeyUp" GotKeyboardFocus="EditBox_GotKeyboardFocus" LostKeyboardFocus="EditBox_LostKeyboardFocus" />
                    <TextBlock Text="" FontSize="10"  />
                    <DockPanel>
                        <TextBlock Text="TLKString:" DockPanel.Dock="Left" HorizontalAlignment="Left" ToolTip="Actor's named TLK string." FontSize="15" />
                        <TextBlock Name="TextBox_Speaker_TLK" Text="{Binding Path=SelectedSpeaker.StrRefID, UpdateSourceTrigger=PropertyChanged}" FontSize="15" DockPanel.Dock="Right" HorizontalAlignment="Right" ToolTip="Actor's named TLK string. Possibly."/>
                    </DockPanel>
                    <TextBlock Name="TextBox_Speaker_FriendlyName" Text="{Binding Path=SelectedSpeaker.FriendlyName, UpdateSourceTrigger=PropertyChanged}" FontSize="20" HorizontalAlignment="Left" ToolTip="Actor's name. Possibly." />
                    <TextBlock Text="" FontSize="10"  />
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="Male FaceFX Animation Set:" VerticalAlignment="Bottom" HorizontalAlignment="Left" ToolTip="Facial Animations for when the Player is Male" DockPanel.Dock="Left"/>
                        <Button Name="Button_Spkr_OpenFFXM" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand}" CommandParameter="FaceFXSpkrM" ToolTip="Open this Speaker's Male AnimSet in FaceFX Editor.">
                            <Button.Content>
                                <fa:ImageAwesome Icon="SmileOutline" Width="16" Height="16" Foreground="DarkBlue"/>
                            </Button.Content>
                        </Button>
                        <TextBlock Text="" FontSize="10"/>
                    </DockPanel>
                    <ComboBox Name="ComboBox_Speaker_FFXM" ItemsSource="{Binding Path=FFXAnimsets}" SelectedItem="{Binding Path=SelectedSpeaker.FaceFX_Male}" HorizontalAlignment="Stretch" ToolTip="Facial Animations for when the Player is Male" Margin="3" DropDownClosed="ComboBox_Speaker_FFX_DropDownClosed" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=ObjectName}" FontStretch="Condensed"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock Text="" FontSize="10"  />
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="Female FaceFX Animation Set:" VerticalAlignment="Bottom" HorizontalAlignment="Left" ToolTip="Facial Animations for when the Player is Female" DockPanel.Dock="Left"/>
                        <Button Name="Button_Spkr_OpenFFXF" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand}" CommandParameter="FaceFXSpkrF" ToolTip="Open this Speaker's Female AnimSet in FaceFX Editor.">
                            <Button.Content>
                                <fa:ImageAwesome Icon="SmileOutline" Width="16" Height="16" Foreground="DarkBlue"/>
                            </Button.Content>
                        </Button>
                        <TextBlock Text=""/>
                    </DockPanel>
                    <ComboBox Name="ComboBox_Speaker_FFXF" ItemsSource="{Binding Path=FFXAnimsets}" SelectedItem="{Binding Path=SelectedSpeaker.FaceFX_Female}" HorizontalAlignment="Stretch" ToolTip="Facial Animations for when the Player is Female" Margin="3" DropDownClosed="ComboBox_Speaker_FFX_DropDownClosed" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=ObjectName}" FontStretch="Condensed"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock Text="" FontSize="10"  />
                </StackPanel>
           <!--Node Panel-->
                <Grid Name="Node_Panel" DockPanel.Dock="Top" Visibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" MinHeight="190"/>
                        <RowDefinition Height="3*" MinHeight="170"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0">
                        <DockPanel HorizontalAlignment="Stretch">
                            <TextBlock Name="Node_Text_Type" Text="Dialogue Node"  HorizontalAlignment="Left" FontWeight="Bold" FontSize="18" DockPanel.Dock="Left" Padding="5"/>
                            <TextBlock Text="{Binding Path=SelectedDialogueNode.NodeCount, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextAlignment="Left" DockPanel.Dock="Right" FontWeight="Bold" FontSize="18"/>
                        </DockPanel>
                        <TextBlock Name="Node_Text_LineString" Text="{Binding Path=SelectedDialogueNode.Line, Mode=OneWay}" TextWrapping="Wrap" HorizontalAlignment="Left" FontWeight="Bold" FontSize="15" DockPanel.Dock="Left" Padding="5"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Line String Ref:  " FontSize="15"/>
                            <TextBox Name="Node_Text_StrRef" Text="{Binding Path=SelectedDialogueNode.LineStrRef, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" GotKeyboardFocus="EditBox_GotKeyboardFocus" LostKeyboardFocus="EditBox_LostKeyboardFocus" KeyUp="EditBox_Node_KeyUp" PreviewTextInput="NumberValidationEditBox"/>
                        </StackPanel>
                        <DockPanel ToolTip="The speaker of the line.  Replies are always player">
                            <TextBlock Text="Speaker: " FontSize="15" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                            <ComboBox Name="Node_Combo_Spkr" ItemsSource="{Binding SelectedSpeakerList, Mode=OneWay}" SelectedValue="{Binding Path=SelectedDialogueNode.SpeakerIndex}" SelectedValuePath="SpeakerID" IsSynchronizedWithCurrentItem="True"
                                      TextSearch.TextPath="SpeakerName" IsEditable="True" HorizontalAlignment="Stretch" ToolTip="Line speaker" Margin="3" DockPanel.Dock="Right" >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=SpeakerID}" Width="30"/>
                                            <TextBlock Text="{Binding Path=SpeakerName}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DockPanel>
                        <DockPanel ToolTip="To whom the speaker is addressing. The speaker will look at the listener.">
                            <TextBlock Text="Listener: " FontSize="15" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                            <ComboBox Name="Node_Combo_Lstnr" ItemsSource="{Binding ListenersList, Mode=OneWay}" SelectedValue="{Binding Path=SelectedDialogueNode.Listener}" SelectedValuePath="SpeakerID" IsSynchronizedWithCurrentItem="True" 
                                      IsEditable="True" HorizontalAlignment="Stretch" ToolTip="Line speaker" Margin="3" DockPanel.Dock="Right" TextSearch.TextPath="SpeakerName">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=SpeakerID}" Width="30"/>
                                            <TextBlock Text="{Binding Path=SpeakerName}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DockPanel>
                    </StackPanel>
                    <TabControl Name="Node_Tab_Detail" Grid.Row="1" >
                        <TabItem Header="Plot Control" ToolTip="Set which plots determine if this line is played, and which plots are set if it does.">
                            <StackPanel Margin="4">
                                <TextBlock Text="Plot checks" />
                                <DockPanel HorizontalAlignment="Stretch">
                                    <TextBlock Text="Conditional/Bool: " DockPanel.Dock="Left" FontSize="15"/>
                                    <ComboBox HorizontalAlignment="Stretch" VerticalAlignment="Top" SelectedIndex="{Binding Path=SelectedDialogueNode.FiresConditional, Converter={StaticResource BoolToIndexConverter}}">
                                        <ComboBoxItem Content="Bool" IsSelected="False" />
                                        <ComboBoxItem Content="Conditional" IsSelected="True" />
                                    </ComboBox>
                                </DockPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Name="Node_Text_Cnd" Text="Conditional :" FontSize="15"></TextBlock>
                                    <TextBox Text="{Binding Path=SelectedDialogueNode.ConditionalOrBool}" HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" GotKeyboardFocus="EditBox_GotKeyboardFocus" LostKeyboardFocus="EditBox_LostKeyboardFocus" KeyUp="EditBox_Node_KeyUp" PreviewTextInput="NumberValidationEditBox"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Conditional Parameter:  " FontSize="15"/>
                                    <TextBox Name="Node_Text_CndParam" Text="{Binding Path=SelectedDialogueNode.ConditionalParam}" HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" GotKeyboardFocus="EditBox_GotKeyboardFocus" LostKeyboardFocus="EditBox_LostKeyboardFocus" KeyUp="EditBox_Node_KeyUp" PreviewTextInput="NumberValidationEditBox"/>
                                </StackPanel>
                                <Separator/>
                                <TextBlock Text="Plot transitions" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Transition:  " FontSize="15"/>
                                    <TextBox Name="Node_Text_Trans" Text="{Binding Path=SelectedDialogueNode.Transition}" HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" GotKeyboardFocus="EditBox_GotKeyboardFocus" LostKeyboardFocus="EditBox_LostKeyboardFocus" KeyUp="EditBox_Node_KeyUp" PreviewTextInput="NumberValidationEditBox"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Transition Parameter:  " FontSize="15"/>
                                    <TextBox Name="Node_Text_TransParam" Text="{Binding Path=SelectedDialogueNode.TransitionParam}" HorizontalAlignment="Stretch" FontWeight="Bold" FontSize="15" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" GotKeyboardFocus="EditBox_GotKeyboardFocus" LostKeyboardFocus="EditBox_LostKeyboardFocus" KeyUp="EditBox_Node_KeyUp" PreviewTextInput="NumberValidationEditBox"/>
                                </StackPanel>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Matinee" ToolTip="Line settings for cutscene, animation and camera control." FocusManager.FocusedElement="{Binding}">
                            <StackPanel>
                                <DockPanel HorizontalAlignment="Stretch">
                                    <TextBlock Text="Line InterpData: "  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="Matinee object for this line." DockPanel.Dock="Left" FontSize="15" Margin="2"/>
                                    <Button Name="OpenLinePE_Button" Command="{Binding OpenInCommand_Line}" CommandParameter="PackEdLine" Padding="3" DockPanel.Dock="Right" ToolTip="Open this line's interpdata in Package editor" >
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="Cube" Width="16" Height="16" Foreground="DarkBlue"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Name="OpenLineSE_Button" Command="{Binding OpenInCommand}" CommandParameter="SeqEdLine" Padding="3" DockPanel.Dock="Right" ToolTip="Open this line's sequence" IsEnabled="False" >
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="CodeFork" Width="16" Height="16" Foreground="DarkBlue"/>
                                        </Button.Content>
                                    </Button>
                                    <Button Name="OpenLineIE_Button"  CommandParameter="InterpEdLine" Padding="3" DockPanel.Dock="Right" ToolTip="Open this line in interpeditor" IsEnabled="False"  >
                                        <Button.Content>
                                            <fa:ImageAwesome Icon="AreaChart" Width="16" Height="16" Foreground="DarkBlue"/>
                                        </Button.Content>
                                    </Button>
                                    <TextBlock Text="{Binding Path=SelectedDialogueNode.Interpdata.UIndex, TargetNullValue=None, FallbackValue=None}" HorizontalAlignment="Left" VerticalAlignment="Bottom" ToolTip="Matinee interpdata for this line." FontSize="15" Margin="2"/>
                                </DockPanel>
                                <StackPanel Orientation="Horizontal" ToolTip="Length in secs of matinee interpdata.">
                                    <TextBlock Text="InterpLength: " VerticalAlignment="Center" FontSize="15" Margin="2"/>
                                    <TextBox Text="{Binding Path=SelectedDialogueNode.InterpLength}" HorizontalAlignment="Stretch" FontSize="15" VerticalAlignment="Center" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" IsReadOnly="True"/>
                                    <TextBlock Text="seconds" VerticalAlignment="Center" FontSize="15" Margin="2"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" ToolTip="Link to Matinee via BioSeqEvent_Conv">
                                    <TextBlock Name="Node_Text_Export" Text="ExportID:  " VerticalAlignment="Center" FontSize="15" Margin="2"/>
                                    <TextBox Text="{Binding Path=SelectedDialogueNode.ExportID}" HorizontalAlignment="Stretch" FontSize="15" VerticalAlignment="Center" HorizontalContentAlignment="Left" BorderBrush="LightGray" BorderThickness="0" GotKeyboardFocus="EditBox_GotKeyboardFocus" LostKeyboardFocus="EditBox_LostKeyboardFocus" KeyUp="EditBox_Node_KeyUp" PreviewTextInput="NumberValidationEditBox"/>
                                </StackPanel>
                                <Separator/>
                                <CheckBox Name="Node_CB_NonTextline" Content="Non vocal line" IsChecked="{Binding Path=SelectedDialogueNode.IsNonTextLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="15" VerticalAlignment="Center" ToolTip="Non-textline where only Matinee plays no vocals."/>
                                <CheckBox Name="Node_CB_bAmbient" Content="Ambient line" IsChecked="{Binding Path=SelectedDialogueNode.IsAmbient, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" ToolTip="Ambient line. Camera remains under player control."  FontSize="15"/>
                                <CheckBox Name="Node_CB_BdyGesture" Content="Ignore Body Gestures" IsChecked="{Binding Path=SelectedDialogueNode.IgnoreBodyGesture, Mode=TwoWay}" ToolTip="Ignore non-facial matinee gestures." FontSize="15" VerticalAlignment="Center"/>
                                <StackPanel Orientation="Horizontal" ToolTip="1-5. Controls how far the camera is away from the speakers face during autoconversations.">
                                    <TextBlock  Text="Camera Intimacy:  " FontSize="15"/>
                                    <xctk:IntegerUpDown Name="Node_Text_CamInt" Value="{Binding Path=SelectedDialogueNode.CameraIntimacy}" HorizontalAlignment="Stretch" FontSize="12" Margin="2"/>
                                </StackPanel>
                                <DockPanel ToolTip="Links to event scripts that fire new sequences. ">
                                    <TextBlock  Text="Script: " FontSize="15" DockPanel.Dock="Left"/>
                                    <ComboBox Name="Node_Combo_ScriptIndex" MinWidth="80" ItemsSource="{Binding Path=SelectedConv.ScriptList}" SelectedItem="{Binding Path=SelectedDialogueNode.Script }" IsSynchronizedWithCurrentItem="False" VerticalAlignment="Center" Style="{StaticResource {x:Type ComboBox}}" IsTextSearchEnabled="True" HorizontalAlignment="Stretch" Margin="2"/>
                                </DockPanel>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="GUI Control" ToolTip="Settings for the line's user interaction.">
                            <StackPanel ScrollViewer.VerticalScrollBarVisibility="Visible">
                                <CheckBox Name ="Node_CB_HideSubs" Content="Hide Subtitle" IsChecked="{Binding Path=SelectedDialogueNode.HideSubtitle}" FontSize="15" VerticalAlignment="Center" ToolTip="Always hide the subtitles." Margin="2"/>
                                <ComboBox Name="Node_Combo_GUIStyle" MinWidth="80" SelectedItem="{Binding Path=SelectedDialogueNode.GUIStyle}" VerticalAlignment="Center" ToolTip="Determines how the GUI looks. Primarily used in ME1." Style="{StaticResource {x:Type ComboBox}}" IsTextSearchEnabled="True"/>
                                <Separator/>
                                <TextBlock Text="Entry:" FontSize="12"/>
                                <CheckBox Name ="Node_CB_ESkippable" Content="Skippable" IsChecked="{Binding Path=SelectedDialogueNode.IsSkippable}" FontSize="15" VerticalAlignment="Center" ToolTip="Player can skip this entry." Margin="2"/>
                                <Separator/>
                                <TextBlock Text="Reply:" FontSize="12"/>
                                <ComboBox Name="Node_Combo_ReplyType" MinWidth="80" SelectedItem="{Binding Path=SelectedDialogueNode.ReplyType}" VerticalAlignment="Center" Style="{StaticResource {x:Type ComboBox}}" IsTextSearchEnabled="True" ToolTip="Autocontinue, the reply moves straight to the reply list.&#x0a;Standard. Dialogue is played as normal.&#x0a;DialogEnd. The conversation is ended." Margin="2"/>
                                <CheckBox Name ="Node_CB_RUnskippable" Content="Unskippable" IsChecked="{Binding Path=SelectedDialogueNode.IsUnskippable}" FontSize="15" VerticalAlignment="Center" ToolTip="Player can never skip this reply." Margin="2"/>
                                <DockPanel >
                                    <CheckBox Name ="Node_CB_RDefault" Content="Default Reply" IsChecked="{Binding Path=SelectedDialogueNode.IsDefaultAction}" VerticalAlignment="Center" FontSize="15" ToolTip="ME3: On action mode this reply is always selected." Margin="2" DockPanel.Dock="Left"/>
                                    <CheckBox Name ="Node_CB_RMajor" Content="Major Decision" IsChecked="{Binding Path=SelectedDialogueNode.IsMajorDecision}" HorizontalAlignment="Center" ToolTip="ME3: decision forced on player in all story modes." FontSize="15" VerticalAlignment="Center" Margin="2" DockPanel.Dock="Right"/>
                                </DockPanel>
                            </StackPanel>
                        </TabItem>
                        <TabItem Header="Assets" ToolTip="Audio and animation assets used by this line">
                            <StackPanel>
                                <StackPanel>
                                    <TextBlock Text="Male:" FontSize="12"/>
                                    <DockPanel HorizontalAlignment="Stretch">
                                        <TextBlock Text="Wwisestream:"  VerticalAlignment="Bottom" HorizontalAlignment="Left" ToolTip="Male audio for this line." DockPanel.Dock="Left" FontSize="15" Margin="3"/>
                                        <Button Name="Open_WwStreamM_Button" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand_Wwbank}" CommandParameter="SoundP_StreamM" ToolTip="Open in Soundplorer">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="VolumeUp" Width="16" Height="16" Foreground="DarkBlue"/>
                                            </Button.Content>
                                        </Button>
                                        <TextBlock Text="{Binding Path=SelectedDialogueNode.WwiseStream_Male.UIndex, TargetNullValue=None, FallbackValue=None}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="Male audio for this line." FontSize="15" Margin="2"/>
                                    </DockPanel>
                                    <DockPanel HorizontalAlignment="Stretch">
                                        <TextBlock Text="FaceFX:"  VerticalAlignment="Bottom" HorizontalAlignment="Left" ToolTip="Male facial animations for this line." DockPanel.Dock="Left" FontSize="15" Margin="3"/>
                                        <Button Name="Open_ffxM_Button" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand}" CommandParameter="FaceFXLineM" ToolTip="Open this line in FaceFX Editor">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="SmileOutline" Width="16" Height="16" Foreground="DarkBlue"/>
                                            </Button.Content>
                                        </Button>
                                        <TextBlock Text="{Binding Path=SelectedDialogueNode.FaceFX_Male, TargetNullValue=None, FallbackValue=None}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="Male facial animations for this line." FontSize="15" Margin="2"/>
                                    </DockPanel>
                                </StackPanel>
                                <Separator/>
                                <StackPanel>
                                    <TextBlock Text="Female:" FontSize="12"/>
                                    <DockPanel HorizontalAlignment="Stretch">
                                        <TextBlock Text="Wwisestream:"  VerticalAlignment="Bottom" HorizontalAlignment="Left" ToolTip="Female audio for this line." DockPanel.Dock="Left" FontSize="15" Margin="3"/>
                                        <Button Name="Open_WwStreamF_Button" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand_Wwbank}" CommandParameter="SoundP_StreamF" ToolTip="Open this stream in Soundplorer">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="VolumeUp" Width="16" Height="16" Foreground="DarkBlue"/>
                                            </Button.Content>
                                        </Button>
                                        <TextBlock Text="{Binding Path=SelectedDialogueNode.WwiseStream_Female.UIndex, TargetNullValue=None, FallbackValue=None}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="Female audio for this line." FontSize="15" Margin="2"/>
                                    </DockPanel>
                                    <DockPanel HorizontalAlignment="Stretch">
                                        <TextBlock Text="FaceFX:"  VerticalAlignment="Bottom" HorizontalAlignment="Left" ToolTip="Female facial animations for this line." DockPanel.Dock="Left" FontSize="15" Margin="3"/>
                                        <Button Name="Open_ffxF_Button" Padding="3" DockPanel.Dock="Right" Command="{Binding OpenInCommand}" CommandParameter="FaceFXLineF" ToolTip="Open this line in FaceFX Editor">
                                            <Button.Content>
                                                <fa:ImageAwesome Icon="SmileOutline" Width="16" Height="16" Foreground="DarkBlue"/>
                                            </Button.Content>
                                        </Button>
                                        <TextBlock Text="{Binding Path=SelectedDialogueNode.FaceFX_Female, TargetNullValue=None, FallbackValue=None}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="Female facial animations for this line." FontSize="15" Margin="2"/>
                                    </DockPanel>
                                </StackPanel>
                            </StackPanel>
                        </TabItem>
                    </TabControl>
                </Grid>
           <!-- Start List -->
                <StackPanel Name="Start_Panel" DockPanel.Dock="Top"  Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
                    <TextBlock Text="Starting Nodes"  HorizontalAlignment="Left" FontWeight="Bold" FontSize="18" DockPanel.Dock="Top" Padding="5"/>
                    <DockPanel LastChildFill="False">
                        <Grid Height="30" DockPanel.Dock="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="31"></ColumnDefinition>
                                <ColumnDefinition Width="31"></ColumnDefinition>
                                <ColumnDefinition Width="31"></ColumnDefinition>
                                <ColumnDefinition Width="31"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Background="GhostWhite">Order</Label>
                            <Label Grid.Column="1" Background="GhostWhite">Entry Link</Label>
                            <Button Name="StartAddButton" Command="{Binding StartAddCommand}" CommandParameter="Add" Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="2" Margin="2" ToolTip="Add a new start">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="PlusCircle" Width="16" Height="16" Foreground="DarkBlue"/>
                                </Button.Content>
                            </Button>
                            <Button Name="StartDeleteButton" Command="{Binding StartDeleteCommand}" Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="3" Margin="2" ToolTip="Delete selected start">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="MinusCircle" Width="16" Height="16" Foreground="DarkBlue"/>
                                </Button.Content>
                            </Button>
                            <Button Name="StartUpButton" Command="{Binding StartUpCommand}" CommandParameter="Up" Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="4" Margin="2" ToolTip="Move selected start up">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="ArrowCircleUp" Width="16" Height="16" Foreground="DarkBlue"/>
                                </Button.Content>
                            </Button>
                            <Button Name="StartDownButton" Command="{Binding StartDownCommand}" CommandParameter="Down" Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="5" Margin="2" ToolTip="Move selected start down">
                                <Button.Content>
                                    <fa:ImageAwesome Icon="ArrowCircleDown" Width="16" Height="16" Foreground="DarkBlue"/>
                                </Button.Content>
                            </Button>
                        </Grid>
                        <ListBox Name="Start_ListBox" DockPanel.Dock="Bottom" ItemsSource="{Binding SelectedStarts, Mode=TwoWay}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Visible"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="Start_ListBox_SelectionChanged" MinHeight="250">
                            <ListBox.ItemTemplate >
                                <DataTemplate>
                                    <Grid Margin="0,0,5,0" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="40" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Text="{Binding Key, UpdateSourceTrigger=PropertyChanged}" />
                                        <TextBlock Grid.Column="1" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style>
                                    <Style.Triggers>
                                        <Trigger Property="Selector.IsSelected" Value="True">
                                            <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add New Start" Command="{Binding StartAddCommand}" CommandParameter="Add"/>
                                    <MenuItem Header="Delete Start" Command="{Binding StartDeleteCommand}"/>
                                    <MenuItem Header="Edit Link" Command="{Binding StartEditCommand}" CommandParameter="Edit"/>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                    </DockPanel>
                </StackPanel>
            </DockPanel>
 
            
<!-- Speaker List -->
            <DockPanel LastChildFill="True" Grid.Row="2" Grid.Column="2" Grid.RowSpan="1" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
                <Grid DockPanel.Dock="Top" Height="30">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="31"></ColumnDefinition>
                        <ColumnDefinition Width="31"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Background="GhostWhite">ID</Label>
                    <Label Grid.Column="1" Background="GhostWhite">Speaker Tag</Label>
                    <Button Name="SpkrUpButton" Command="{Binding SpeakerMoveUpCommand}" CommandParameter="Up" Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="2" Margin="2">
                        <Button.Content>
                            <fa:ImageAwesome Icon="ArrowCircleUp" Width="16" Height="16" Foreground="DarkBlue"/>
                        </Button.Content>
                    </Button>
                    <Button Name="SpkrDownButton" Command="{Binding SpeakerMoveDownCommand}" CommandParameter="Down" Padding="3" DockPanel.Dock="Right" IsEnabled="True" Grid.Column="3" Margin="2">
                        <Button.Content>
                            <fa:ImageAwesome Icon="ArrowCircleDown" Width="16" Height="16" Foreground="DarkBlue"/>
                        </Button.Content>
                    </Button>
                </Grid>
                <ListBox Name="Speakers_ListBox" DockPanel.Dock="Bottom" ItemsSource="{Binding SelectedSpeakerList}" SelectedItem="{Binding SelectedSpeaker, Mode=TwoWay}" HorizontalContentAlignment="Stretch" ScrollViewer.VerticalScrollBarVisibility="Visible"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionChanged="Speakers_ListBox_SelectionChanged" MouseLeftButtonUp="ListBox_MouseLeftButtonUp" >
                    <ListBox.ItemTemplate >
                        <DataTemplate>
                            <Grid Margin="0,0,5,0" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Visible" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding SpeakerID, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Grid.Column="1" Text="{Binding SpeakerName, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Add New Speaker" Command="{Binding AddSpeakerCommand}"/>
                            <MenuItem Header="Delete Speaker" Command="{Binding DeleteSpeakerCommand}"/>
                            <MenuItem Header="Rename" Command="{Binding ChangeNameCommand}" ToolTip="Rename the speaker's tag"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
            </DockPanel>
            

            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" Grid.Column="0"/>
            <GridSplitter Grid.Row="0" Grid.RowSpan="3" Width="5" HorizontalAlignment="Stretch" Grid.Column="1"/>
<!-- Startup Recents Box -->
            <Grid Column="0" Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="100"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                    <TextBlock Margin="5" Text="Welcome to Dialogue Editor WPF, the enhanced visual version of Dialogue Editor" FontWeight="Bold"/>
                    <TextBlock Margin="5">
                            Dialogue Editor WPF is the enhanced visual version of classic Dialogue Editor.
                                <LineBreak/>
                            The editor is visually based so you can see the dialogue tree and move/change connections
                                <LineBreak/>
                                <LineBreak/>
                            Instructions:
                                <LineBreak/>
                                -  Click on a conversation in the bottom left corner to bring it into focus.
                            <LineBreak/>
                                -  Left Click on entries or replies nodes to see detailed settings.
                            <LineBreak/>
                                -  Right Click to clone or add new nodes. Drag
                             <LineBreak/>
                                -  Drag and drop connections to see the path in the conversation.
                             <LineBreak/>
                    </TextBlock>
                </StackPanel>
                <Grid HorizontalAlignment="Center" Margin="20,0,20,15" Grid.Column="3" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="280"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Recently opened items" Grid.Row="0" Grid.ColumnSpan="5" TextAlignment="Center" FontSize="20" FontWeight="Light" Margin="0"/>
                    <Button Name="RecentButton1" Content="Item" Grid.Row="1" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton2" Content="Item" Grid.Row="1" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton3" Content="Item" Grid.Row="2" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton4" Content="Item" Grid.Row="2" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton5" Content="Item" Grid.Row="3" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton6" Content="Item" Grid.Row="3" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton7" Content="Item" Grid.Row="4" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton8" Content="Item" Grid.Row="4" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton9" Content="Item" Grid.Row="5" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton10" Content="Item" Grid.Row="5" Grid.Column="1" Margin="3" Padding="3"/>
                </Grid>
<!-- Conversation Box-->
                <ListBox Name="Conversations_ListBox" Grid.Row="0" Grid.Column="0" ItemsSource="{Binding Conversations}" SelectionChanged="ConversationList_SelectedItemChanged" MouseLeftButtonUp="ListBox_MouseLeftButtonUp" HorizontalContentAlignment="Stretch"
                             Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,5,0">
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Export.EntryHasPendingChanges}" Value="true">
                                                <Setter Property="Background" Value="Yellow"/>
                                                <Setter Property="ToolTip" Value="This export has been modified but the file has not yet been saved"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{Binding Path=ExportUID}"/>
                                <TextBlock Grid.Column="1" Text="{Binding Path=ConvName}">
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Open in Package Editor" Command="{Binding OpenInCommand}" CommandParameter="PackEdNode"/>
                            <MenuItem Header="Open in Sequence Editor" Command="{Binding OpenInCommand}" CommandParameter="SeqEdNode"/>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
                <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"/>
<!--Tab Control -->
                <TabControl TabStripPlacement="Left"  Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, RelativeSource={RelativeSource AncestorType=Window}}">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{TemplateBinding Content}">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="270" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="3" />
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="Interpreter">
                        <global:InterpreterWPF x:Name="Properties_InterpreterWPF" />
                    </TabItem>
                    <TabItem Header="InterpData"></TabItem>
                    <TabItem Header="FaceFX"></TabItem>
                    <TabItem Header="Audio">
                        <TabControl>
                            <TabControl.Resources>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <ContentPresenter Content="{TemplateBinding Content}">
                                                    <ContentPresenter.LayoutTransform>
                                                        <RotateTransform Angle="0" />
                                                    </ContentPresenter.LayoutTransform>
                                                </ContentPresenter>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Padding" Value="3" />
                                </Style>
                            </TabControl.Resources>
                            <TabItem Header="Male">
                                <global:Soundpanel x:Name="SoundpanelWPF_M" />
                            </TabItem>
                            <TabItem Header="Female">
                                <global:Soundpanel x:Name="SoundpanelWPF_F" />
                            </TabItem>
                        </TabControl>
                    </TabItem>
                </TabControl>
            </Grid>
            <WindowsFormsHost Grid.Column="0" Grid.Row="0" Name="GraphHost" VerticalAlignment="Stretch">
                <local:ConvGraphEditor/>
            </WindowsFormsHost>
            <GridSplitter Grid.Row="3" Height="5" HorizontalAlignment="Stretch" Grid.Column="0" Grid.ColumnSpan="3"/>

        </Grid>
    </DockPanel>
</global:WPFBase>
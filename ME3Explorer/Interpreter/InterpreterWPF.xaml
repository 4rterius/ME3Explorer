<global:ExportLoaderControl x:Class="ME3Explorer.InterpreterWPF"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:global="clr-namespace:ME3Explorer"
             xmlns:SharedUI="clr-namespace:ME3Explorer.SharedUI"
             xmlns:Commands="clr-namespace:ME3Explorer.Commands"
             xmlns:hb1="clr-namespace:Be.Windows.Forms;assembly=Be.Windows.Forms.HexBox"
             mc:Ignorable="d" 
             Loaded="Interpreter_Loaded"
             xmlns:Converters="clr-namespace:ME3Explorer.SharedUI.Converters"
                            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                            DataContext="{Binding RelativeSource={RelativeSource Self}}"
             d:DesignWidth="800"
             d:DesignHeight="500">
    <UserControl.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:UPropertyColorPickerVisibilityConverter x:Key="UPropertyColorPickerVisibilityConverter"/>
        <Converters:NullOrEmptyStringVisibilityConverter x:Key="NullOrEmptyStringVisibilityConverter"/>
        <Converters:ColorCodeConverter x:Key="ColorCodeConverter"/>
        <Converters:UnsavedChangesForegroundConverter x:Key="UnsavedChangesForegroundConverter"/>
    </UserControl.Resources>
    <DockPanel>
        <ToolBar ToolBarTray.IsLocked="True" DockPanel.Dock="Top">
            <Button Name="SaveHexChange_Button" Content="Save Hex Changes" Foreground="{Binding HasUnsavedChanges, Converter={StaticResource UnsavedChangesForegroundConverter}}" Click="Interpreter_SaveHexChanges_Click" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}"/>
            <Button Content="Toggle Hexbox Width" Click="Interpreter_ToggleHexboxWidth_Click"/>
            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Button Content="Add Property" Command="{Binding AddPropertyCommand}"/>
            <Separator Name="EditorSet_ArraySetSeparator" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <Button Name="AddArrayElement_Button" Content="Add Array Element" Click="AddArrayElement_Button_Click" VerticalAlignment="Center"/>
            <Button Name="RemoveArrayElement_Button" Content="Remove Array Element" Click="RemoveArrayElement_Button_Click" VerticalAlignment="Center"/>
            <Separator Name="EditorSet_Separator" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
            <TextBox Width="80" Name="Value_TextBox" VerticalAlignment="Center" ToolTip="Value for this property" KeyDown="ValueTextBox_KeyDown" TextChanged="Value_TextBox_TextChanged" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}" Margin="0" Style="{StaticResource {x:Type TextBox}}"/>
            <ComboBox Name="Value_ComboBox" MinWidth="80" VerticalAlignment="Center" ToolTip="Value for this property" Style="{StaticResource {x:Type ComboBox}}" IsTextSearchEnabled="True">
                <ComboBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </ComboBox.ItemsPanel>
                <ComboBox.Resources>
                    <DataTemplate DataType="{x:Type global:PackageEditorWPF+IndexedName}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Index}" Foreground="Gray"/>
                            <TextBlock Text="{Binding Path=Name.Name}" Foreground="Black" Margin="5,0,0,0"/>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.Resources>
            </ComboBox>
            <TextBlock Text="Index:" Name="NameIndexPrefix_TextBlock" VerticalAlignment="Center"/>
            <TextBox Width="30" Name="NameIndex_TextBox" VerticalAlignment="Center" ToolTip="Value for this property" KeyDown="ValueTextBox_KeyDown" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type TextBox}}"/>
            <Button Name="Set_Button" Content="Set" Click="SetValue_Click" VerticalAlignment="Stretch" Padding="10,0,10,0" Style="{StaticResource {x:Type Button}}"/>
            <TextBlock Name="ParsedValue_TextBlock" VerticalAlignment="Center" Foreground="Gray" Margin="5,0,0,0"/>
        </ToolBar>
        <StatusBar Height="23" DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Name="StatusBar_LeftMostText" Text="Nothing selected"/>
            </StatusBarItem>
        </StatusBar>
        <Grid Margin="0,1,0,-1">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="220" MaxWidth="718" Width="285" Name="HexboxColumnDefinition" />
                <ColumnDefinition Width="1" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!--<control:HexEditor Name="Interpreter_HexBox" Grid.Column="0" Grid.Row="1" Width="Auto" Height="Auto" BytePerLine="4" AllowAutoHightLighSelectionByte="False" StatusBarVisibility="Collapsed" AllowDeleteByte="True" AllowExtend="True" />-->
            <WindowsFormsHost Name="Interpreter_Hexbox_Host" Grid.Row="10" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
                <hb1:HexBox MinBytesPerLine="4" MaxBytesPerLine="16" ColumnInfoVisible="True" LineInfoVisible="True" Font="Courier New,10" BoldFont="Consolas,10" StringViewVisible="True" SelectionStartChanged="hb1_SelectionChanged" VScrollBarVisible="True">
                </hb1:HexBox>
            </WindowsFormsHost>
            <GridSplitter Grid.Column="1" 
                      Grid.Row="1" HorizontalAlignment="Stretch" 
                      Margin="-5,0"
                      BorderThickness="5,0"
                      BorderBrush="Transparent"
                      Panel.ZIndex="60"/>
            <SharedUI:StretchingTreeView x:Name="Interpreter_TreeView" Grid.Row="1" Grid.Column="2" Width="Auto" FontFamily="Consolas" SelectedItemChanged="Interpreter_TreeViewSelectedItemChanged" ItemsSource="{Binding PropertyNodes}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling">
                <SharedUI:StretchingTreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type global:UPropertyTreeViewEntry}" ItemsSource="{Binding ChildrenProperties}">
                        <StackPanel x:Name="PropertyItem_Container" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="1">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock x:Name="PropertyItem_DisplayName" Text="{Binding DisplayName}" VerticalAlignment="Center" FontStyle="Italic"/>
                                    <TextBlock x:Name="PropertyItem_EditableValue" Margin="5,0,0,0" Text="{Binding EditableValue}" VerticalAlignment="Center" FontWeight="Bold" Visibility="{Binding EditableValue, Converter={StaticResource NullOrEmptyStringVisibilityConverter}}"/>
                                    <TextBlock x:Name="PropertyItem_ParsedValue" Margin="5,0,0,0" Text="{Binding ParsedValue}" VerticalAlignment="Center" FontStyle="Italic"/>
                                    <xctk:ColorPicker Margin="5,0,0,0" Visibility="{Binding Property, Converter={StaticResource UPropertyColorPickerVisibilityConverter}}" SelectedColor="{Binding ColorStructCode,Converter={StaticResource ColorCodeConverter}}" Width="60"/>
                                </StackPanel>
                                <TextBlock x:Name="PropertyItem_DisplayType" Text="{Binding PropertyType}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <ei:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </StackPanel>
                        </StackPanel>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding PropertyType}" Value="ObjectProperty">
                                <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#6d6c3f"/>-->
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#6d6c3f"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88fffec4"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="IntProperty">
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#664f46"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#AAffeae2"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="StringProperty">
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#374f46"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#e2fff4"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="ArrayProperty">
                                <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#382c4c"/>-->
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#382c4c"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#d3bef4"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="BoolProperty">
                                <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#43563a"/>-->
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#43563a"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88ecffe2"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="StructProperty">
                                <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#593953"/>-->
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#593953"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88f4beea"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="ByteProperty">
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#474647"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88afaeaf"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="NameProperty">
                                <!--<Setter TargetName="PropertyItem_EditorSet" Property="ContentTemplate" Value="{StaticResource EditorSet_NamePropertyTemplate}"/>-->
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#4a5568"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88e2edff"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding PropertyType}" Value="None">
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#6d4818"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88ffb759"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasChanges}" Value="True">
                                <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="Maroon"/>
                                <Setter TargetName="PropertyItem_Container" Property="Background" Value="Yellow"/>
                            </DataTrigger>


                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="LightBlue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="LightBlue" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
                </SharedUI:StretchingTreeView.Resources>
                <SharedUI:StretchingTreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                    </Style>
                    
                </SharedUI:StretchingTreeView.ItemContainerStyle>
                <SharedUI:StretchingTreeView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Sort children properties alphabetically" ToolTip="Sorts properties alphabetically. This is a cosmetic only change." Command="{Binding SortChildrenCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <MenuItem Header="Array sorting: By ascending parsed value" ToolTip="Sorts an array property by its parsed value, in ascending order." Command="{Binding SortParsedArrayAscendingCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <MenuItem Header="Array sorting: By descending parsed value" ToolTip="Sorts an array property by its parsed value, in descending order." Command="{Binding SortParsedArrayDescendingCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <MenuItem Header="Array sorting: By ascending value" ToolTip="Sorts an array property by its value, in ascending order." Command="{Binding SortValueArrayAscendingCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <MenuItem Header="Array sorting: By descending value" ToolTip="Sorts an array property by its value, in descending order." Command="{Binding SortValueArrayDescendingCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>


                        <MenuItem Header="Expand children" ToolTip="Expands all children of this property" Command="{Binding ExpandChildrenCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <MenuItem Header="Collapse children" ToolTip="Collapses all children of this property" Command="{Binding CollapseChildrenCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>

                        <MenuItem Header="Remove property" ToolTip="Remove this property from this export" Command="{Binding RemovePropertyCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <!--<MenuItem Header="Order array...">
                            <MenuItem Header="By value" ToolTip="Remove this property from this export" Command="{Binding RemovePropertyCommand}" Visibility="{Binding Path=IsEnabled,Converter={StaticResource BoolToVisibilityConverter}}"/>


                        </MenuItem>-->
                    </ContextMenu>
                </SharedUI:StretchingTreeView.ContextMenu>
            </SharedUI:StretchingTreeView>
        </Grid>
    </DockPanel>
</global:ExportLoaderControl>

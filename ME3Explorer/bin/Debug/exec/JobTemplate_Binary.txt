using System.IO;
using ME3Explorer;
using ME3Explorer.Unreal;
using KFreonLib.Scripting;
using KFreonLib.MEDirectories;
using KFreonLib.PCCObjects;
using KFreonLib.Debugging;

namespace SimpleScripts
{
    public class MyScript : IScript
    {
        public string RunScript()
        {
            BasicFunction bf = new BasicFunction();
            string objname = "**m1**";
            string filename = "**m2**";
            string pathexec = bf.getExecPath();
            string pathtarget = ME3Directory.cookedPath;
            bf.DebugPrintln("Binary Replacement in " + filename);
			string file = Path.Combine(pathtarget, filename);
			DebugOutput.PrintLn("Targeting: " + file);
            if (!File.Exists(file))
            {
                bf.DebugPrintln("Cant find target pcc!");
                return "";
            }
            if (!File.Exists(pathexec + "data.bin"))
            {
                bf.DebugPrintln("Cant find input data!");
                return "";
            }
            IPCCObject pcc = KFreonLib.PCCObjects.Creation.CreatePCCObject(pathtarget + filename, 3);
            bool found = false;
            foreach(IExportEntry e in pcc.Exports)
                if (e.ObjectName == objname)
                {
                    found = true;
                    FileStream fs = new FileStream(pathexec + "data.bin", FileMode.Open, FileAccess.Read);
                    byte[] buff = new byte[fs.Length];
                    int cnt;
                    int sum = 0;
                    while ((cnt = fs.Read(buff, sum, buff.Length - sum)) > 0) sum += cnt;
                    fs.Close();
                    e.Data = buff;
                }
            if (!found)
            {
                bf.DebugPrintln("Cant find object!");
                return "";
            }
            bf.DebugPrintln("Found!");
            pcc.saveToFile();
            bf.DebugPrintln("Done.");
            return "";
        }
    }
}
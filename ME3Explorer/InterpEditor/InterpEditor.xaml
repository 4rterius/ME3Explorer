<global:WPFBase x:Class="ME3Explorer.Matinee.InterpEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:global="clr-namespace:ME3Explorer"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:ME3Explorer.Matinee"
        xmlns:SharedUI="clr-namespace:ME3Explorer.SharedUI"
        xmlns:Converters="clr-namespace:ME3Explorer.SharedUI.Converters"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:vhelp="clr-namespace:ME3Explorer.SharedUI.PeregrineTreeView"
        mc:Ignorable="d"
        Title="Interp Editor WPF" Height="750" Width="1300" MinWidth="900" MinHeight="200">
    <Window.Resources>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <Converters:GameTypeConverter x:Key="GameTypeConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="{Binding SaveAsCommand}"/>
        <KeyBinding Key="G" Modifiers="Control" Command="{Binding GotoCommand}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File" Padding="4" >
                <MenuItem Header="_Open" Command="{Binding OpenCommand}" InputGestureText="Ctrl+O" ToolTip="Open a package file"/>
                <MenuItem Header="_Save"  Command="{Binding SaveCommand}" InputGestureText="Ctrl+S" ToolTip="Save package file in-place" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"/>
                <MenuItem Header="Save as" Command="{Binding SaveAsCommand}" InputGestureText="Ctrl+Shift+S" ToolTip="Save package file to another location" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"/>
                <Separator />
                <MenuItem Name="Recents_MenuItem" Header="Recent" IsEnabled="false"/>
            </MenuItem>

            <MenuItem Header="Tools" Padding="4">
                <MenuItem Header="Goto #" Command="{Binding GotoCommand}" InputGestureText="Ctrl+G"/>
            </MenuItem>

            <MenuItem Header="View Options" Padding="4">
            </MenuItem>
        </Menu>
        <StatusBar Height="23" DockPanel.Dock="Bottom">
            <SharedUI:StatusBarGameIDIndicator Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"
                                             GameType="{Binding Pcc, Converter={StaticResource GameTypeConverter}}" Margin="0,-4"/>
            <StatusBarItem>
                <TextBlock Name="StatusBar_LeftMostText" Text="{Binding StatusText}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Name="StatusBar_RightSide_LastSaved" Text="{Binding Pcc.LastSaved, StringFormat='Last saved at {0}'}" Foreground="Gray"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <!-- Main Content panel-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            
            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" Grid.Column="0"/>
            <Grid Column="0" Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="100"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="300"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Grid.ColumnSpan="3" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                    <TextBlock Margin="5" Text="Welcome to Interp Editor, the rewritten version of Interp Viewer" FontWeight="Bold"/>
                    <TextBlock Margin="5">
                            Sequence Editor WPF is a bit different from the classic Sequence Editor.
                                <LineBreak/>
                                Indexes are done strictly by UIndex, which is how they appear in game code.
                                <LineBreak/>
                                <LineBreak/>
                            This means:
                                <LineBreak/>
                                -  Export references will be incremented by 1 from what you have seen in the old Sequence Editor
                            <LineBreak/>
                                -  Import references will remain the same
                            <LineBreak/>
                                -  0 indicates null, empty, or "Class", depending on the context
                             <LineBreak/>
                    </TextBlock>
                </StackPanel>

                <Grid HorizontalAlignment="Center" Margin="20,0,20,15" Grid.Column="3" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="280"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Recently opened items" Grid.Row="0" Grid.ColumnSpan="5" TextAlignment="Center" FontSize="20" FontWeight="Light" Margin="0"/>
                    <Button Name="RecentButton1" Content="Item" Grid.Row="1" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton2" Content="Item" Grid.Row="1" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton3" Content="Item" Grid.Row="2" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton4" Content="Item" Grid.Row="2" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton5" Content="Item" Grid.Row="3" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton6" Content="Item" Grid.Row="3" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton7" Content="Item" Grid.Row="4" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton8" Content="Item" Grid.Row="4" Grid.Column="1" Margin="3" Padding="3"/>
                    <Button Name="RecentButton9" Content="Item" Grid.Row="5" Grid.Column="0" Margin="3" Padding="3"/>
                    <Button Name="RecentButton10" Content="Item" Grid.Row="5" Grid.Column="1" Margin="3" Padding="3"/>
                </Grid>
                <ListBox Name="InterpDataExports_ListBox" Grid.Column="2" Grid.RowSpan="3" ItemsSource="{Binding InterpDataExports}" SelectionChanged="InterpDataExportsList_SelectedItemChanged"
                         HorizontalContentAlignment="Stretch" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,0,5,0">
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Export.EntryHasPendingChanges}" Value="true">
                                                <Setter Property="Background" Value="Yellow"/>
                                                <Setter Property="ToolTip" Value="This export has been modified but the file has not yet been saved"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Export.UIndex}" />
                                <TextBlock Grid.Column="1">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}_{1}">
                                            <Binding Path="Export.ObjectName" />
                                            <Binding Path="Export.indexValue" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemContainerStyle>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
                <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}}"/>
                <global:InterpreterWPF x:Name="Properties_InterpreterWPF" Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, RelativeSource={RelativeSource AncestorType=Window}}"/>
            </Grid>
        </Grid>
    </DockPanel>
</global:WPFBase>
<global:WPFBase x:Class="ME3Explorer.PackageEditorWPF"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:global="clr-namespace:ME3Explorer"
        mc:Ignorable="d"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Commands="clr-namespace:ME3Explorer.Commands"
        xmlns:CurveEd="clr-namespace:ME3Explorer.CurveEd"
        xmlns:Converters="clr-namespace:ME3Explorer.SharedUI.Converters"
        xmlns:Packages="clr-namespace:ME3Explorer.Packages"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:properties="clr-namespace:ME3Explorer.Properties"
        xmlns:SharedUI="clr-namespace:ME3Explorer.SharedUI"
        xmlns:vhelp="clr-namespace:ME3Explorer.SharedUI.PeregrineTreeView"
        Closing="PackageEditorWPF_Closing"
        xmlns:hb1="clr-namespace:Be.Windows.Forms;assembly=Be.Windows.Forms.HexBox"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:metadataeditor="clr-namespace:ME3Explorer.MetadataEditor"
        Title="Package Editor WPF" Height="650" Width="1100"
        DragOver="Window_DragOver"
        Drop="Window_Drop"
        AllowDrop="True"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <Window.Resources>
        <ItemsPanelTemplate x:Key="VSP">
            <VirtualizingStackPanel/>
        </ItemsPanelTemplate>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <Converters:PackageEditorWPFActiveViewHighlightConverter x:Key="PackageEditorWPFActiveViewHighlightConverter"/>
        <Converters:ObjectStructPropertyTypeConverter x:Key="ObjectStructPropertyTypeConverter"/>
        <Converters:EntryFileTypeConverter x:Key="EntryFileTypeConverter"/>
        <Converters:EntryFileTypeIconPathConverter x:Key="EntryFileTypeIconPathConverter"/>
        <Converters:EmbeddedFileToolTipConverter x:Key="EmbeddedFileToolTipConverter"/>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Open" Executed="OpenCommandBinding_Executed"/>
        <CommandBinding Command="Save" Executed="SaveCommandBinding_Executed"/>
        <CommandBinding Command="SaveAs" Executed="SaveAsCommandBinding_Executed"/>
        <CommandBinding Command="Commands:PackageEditorWPFCommands.FindCommand" Executed="FindCommandBinding_Executed"/>
        <CommandBinding Command="Commands:PackageEditorWPFCommands.GotoCommand" Executed="GotoCommandBinding_Executed"/>
        <CommandBinding Command="Commands:PackageEditorWPFCommands.NextTabCommand" Executed="NextTabBinding_Executed"/>
        <CommandBinding Command="Commands:PackageEditorWPFCommands.PreviousTabCommand" Executed="PreviousTabBinding_Executed"/>

    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="Open"/>
        <KeyBinding Key="S" Modifiers="Control" Command="Save"/>
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="SaveAs"/>
        <KeyBinding Key="F" Modifiers="Control" Command="Commands:PackageEditorWPFCommands.FindCommand"/>
        <KeyBinding Key="G" Modifiers="Control" Command="Commands:PackageEditorWPFCommands.GotoCommand"/>
        <KeyBinding Key="Right" Modifiers="Alt" Command="Commands:PackageEditorWPFCommands.NextTabCommand"/>
        <KeyBinding Key="Left" Modifiers="Alt" Command="Commands:PackageEditorWPFCommands.PreviousTabCommand"/>

    </Window.InputBindings>
    <xctk:BusyIndicator IsBusy="{Binding Path=IsBusy}" BusyContent="{Binding BusyText}">
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="File" Padding="4" >
                    <MenuItem Header="_Open" Command="Open" InputGestureText="Ctrl+O" ToolTip="Open a package file"/>
                    <MenuItem Header="_Save"  Command="Save" InputGestureText="Ctrl+S" ToolTip="Save package file in-place" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"/>
                    <MenuItem Header="Save as" Command="SaveAs" InputGestureText="Ctrl+Shift+S" ToolTip="Save package file to another location" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"/>
                    <MenuItem Header="Open in...">
                        <MenuItem Header="Dialogue Editor" Tag="DialogueEditor" Click="OpenIn_Clicked" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/dialogue_editor_64x64.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="FaceFX Editor" Tag="FaceFXEditor" Click="OpenIn_Clicked" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/facefx_editor_icon.ico"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Pathfinding Editor" Tag="PathfindingEditor" Click="OpenIn_Clicked" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/path_editor_64.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Soundplorer WPF" Tag="SoundplorerWPF" Click="OpenIn_Clicked" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/soundplorer_64x64.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Sequence Editor" Tag="SequenceEditor" Click="OpenIn_Clicked" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/Resources/sequence_editor_64x64.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <Separator />
                    <MenuItem Name="Recents_MenuItem" Header="Recent" IsEnabled="false"/>
                </MenuItem>

                <MenuItem Header="Tools" Padding="4">
                    <MenuItem Header="Package file header info" ToolTip="View information stored in package header" Command="{Binding PackageHeaderViewerCommand}"/>
                    <MenuItem Header="Compare with another package" ToolTip="Compare another version of this package to see what exports and imports have changed" Command="{Binding ComparePackagesCommand}"/>
                    <Separator/>
                    <MenuItem Header="Add name" ToolTip="Add a name to this package" Command="{Binding AddNameCommand}"/>
                    <MenuItem Header="Convenience tools" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <MenuItem Header="Rebuild BioWorld StreamingLevels"  Command="{Binding RebuildStreamingLevelsCommand}" ToolTip="Updates BioWorldInfo's list of StreamingLevels to include all LevelStreamingKismet"/>

                    </MenuItem>

                    <MenuItem Header="Export..." IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <MenuItem Header="Complete export data"  Command="{Binding ExportAllDataCommand}" ToolTip="Export all export data (properties + binary) to a .bin file"/>
                        <MenuItem Header="Binary data only"   Command="{Binding ExportBinaryDataCommand}" ToolTip="Export only binary data (bytes after properties) to a .bin file"/>
                    </MenuItem>
                    <MenuItem Header="Import..." IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <MenuItem Header="Complete export data"  Command="{Binding ImportAllDataCommand}" ToolTip="Import a .bin file and replace the contents of this export"/>
                        <MenuItem Header="Binary data only"  Command="{Binding ImportBinaryDataCommand}" ToolTip="Import a .bin file and replace only the binary section of this export"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Name="HexConverterMenuItem" Header="Hex Converter" Click="HexConverterMenuItem_Click" ToolTip="Open the HexConverter application">
                        <MenuItem.Icon>
                            <Image Source="/Resources/hexconverter_icon64x64.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                </MenuItem>

                <MenuItem Header="Options" Padding="4">
                    <MenuItem Name="TLKManager_MenuItem" Header="TLK Manager" Click="TLKManager_MenuItem_Click" ToolTip="Open TLK Manager"/>
                    <MenuItem Name="TouchComfyMode_MenuItem" Header="Touch Comfy Mode" Click="TouchComfyMode_Clicked" ToolTip="Makes Package Editor WPF a bit easier to use on touch devices"/>
                    <Separator/>
                    <MenuItem Header="Binary Interpreter">
                        <MenuItem Name="BinaryInterpreterWPF_AlwaysAutoParse_MenuItem" Header="Auto-parse generic scans > 20KB" Click="BinaryInterpreterWPF_AlwaysAutoParse_Click" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=BinaryInterpreterWPFAutoScanAlways, Mode=TwoWay}" ToolTip="Automatically parse exports that use Generic Scan that are larger than 20KB.&#10;By default, this is disabled to improve performance."/>
                    </MenuItem>

                </MenuItem>
                <MenuItem Header="Debugging" Padding="4">
                    <MenuItem Header="Find entry via File Offset" ToolTip="Find which entry contains the offset you put in.&#x0a;This is typically useful when trying to locate a bad index. You can do this by:&#x0a;Looking at ME3Logger output, searching for the value in the file's binary via a hex editor like HxD, and then looking up that offset with this tool." Command="{Binding FindEntryViaOffsetCommand}"/>
                    <MenuItem Header="Check for duplicate indexes" ToolTip="Tries to find duplicate indexes in this file" Command="{Binding CheckForDuplicateIndexesCommand}"/>
                </MenuItem>
                <MenuItem Header="Experiments" Padding="4">
                    <MenuItem Header="Items in this list are for toolset developers only" IsEnabled="False"/>
                    <MenuItem Header="Build ME1 TLK Database" Click="BuildME1TLKDB_Clicked"/>
                    <MenuItem Header="Port SFXObjectives from one file to another" Click="Port_SFXObjectives_Click"/>
                    <MenuItem Header="Build ME1 Object Info" Click="BuildME1ObjectInfo_Clicked"/>
                    <MenuItem Header="Generate GUID cache binary for folder" Click="GenerateGUIDCacheForFolder_Clicked"/>
                    <MenuItem Header="Generate new GUID for package file" Click="GenerateNewGUIDForPackageFile_Clicked"/>
                    <MenuItem Header="Make all ammo/grenades in file respawn on proper timers" Click="MakeAllGrenadesAmmoRespawn_Click"/>
                    <MenuItem Header="Build ME1 Native Functions Info" Click="BuildME1NativeFunctionsInfo_Click"/>
                    <MenuItem Header="Find ME1 2DA Tables" Click="FindME12DATables_Click"/>

                </MenuItem>
            </Menu>
            <StatusBar Height="23" DockPanel.Dock="Bottom">
                <StatusBarItem VerticalContentAlignment="Center" Name="StatusBar_GameID_Container" Visibility="Collapsed">
                    <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" VerticalAlignment="Center">
                        <TextBlock Name="StatusBar_GameID_Text" Background="Red" Text="Game ID" FontSize="11" Foreground="White" Padding="4,3,4,3" FontFamily="Consolas" VerticalAlignment="Center"/>
                    </Border>
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock Name="StatusBar_LeftMostText" Text="Package Editor WPF is in beta - not everything works right now!"/>
                </StatusBarItem>
            </StatusBar>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="6*" />
                </Grid.ColumnDefinitions>
                <ToolBar ToolBarTray.IsLocked="True" Grid.Row="0" Grid.ColumnSpan="3">
                    <Button Content="Names" Height="22" Margin="3" ToolTip="View Name table" Click="NamesView_Click" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" Background="{Binding CurrentView, Converter={StaticResource PackageEditorWPFActiveViewHighlightConverter}, ConverterParameter='Names'}" />
                    <Button Content="Imports" Height="22" Click="ImportsView_Click" ToolTip="View Imports table" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"  Background="{Binding CurrentView, Converter={StaticResource PackageEditorWPFActiveViewHighlightConverter}, ConverterParameter='Imports'}"/>
                    <Button Content="Exports" Height="22" Margin="3" Click="ExportsView_Click" ToolTip="View Exports Table" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"  Background="{Binding CurrentView, Converter={StaticResource PackageEditorWPFActiveViewHighlightConverter}, ConverterParameter='Exports'}"/>
                    <Button Content="Tree View"  Height="22" Click="TreeView_Click" ToolTip="View imports and exports in package hierarchy" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}"  Background="{Binding CurrentView, Converter={StaticResource PackageEditorWPFActiveViewHighlightConverter}, ConverterParameter='Tree'}"/>
                    <Separator/>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0,0,0" Height="22">
                        <xctk:WatermarkComboBox Watermark="Class Selector" Name="ClassDropdown_Combobox" Width="140" ItemsPanel="{StaticResource VSP}" ItemsSource="{Binding ClassDropdownList}" IsTextSearchEnabled="True" KeyUp="ClassDropdown_Combobox_OnKeyUpHandler" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" VerticalContentAlignment="Center"/>
                        <!--<ComboBox Name="ClassDropdown_Combobox" Width="140" ItemsPanel="{StaticResource VSP}" ItemsSource="{Binding ClassDropdownList}" IsTextSearchEnabled="True" KeyUp="ClassDropdown_Combobox_OnKeyUpHandler" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type ComboBox}}" VerticalContentAlignment="Center"/>-->
                        <Button Content="Find object by class" Click="FindObjectByClass_Click" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type Button}}" Padding="10,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0,0,0" Height="22">
                        <TextBox Name="Search_TextBox" Width="70" KeyUp="Searchbox_OnKeyUpHandler" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type TextBox}}"  VerticalContentAlignment="Center"/>
                        <Button Content="Search" Click="SearchButton_Clicked" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type Button}}"  Padding="10,0"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="5,0,0,0" Height="22">
                        <TextBox Name="Goto_TextBox" Width="70" KeyUp="Goto_TextBox_KeyUp" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type TextBox}}"  VerticalContentAlignment="Center"/>
                        <Button Content="Goto #" Click="GotoButton_Clicked" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}" Style="{StaticResource {x:Type Button}}" Padding="7,0"/>
                    </StackPanel>
                    <!--This is outside so that it doesn't hide the whole box if it is too long to show -->
                    <TextBlock Name="Goto_Preview_TextBox" VerticalAlignment="Center" Foreground="Gray" Margin="5,0,0,0"/>
                </ToolBar>
                <SharedUI:ListBoxScroll x:Name="LeftSide_ListView" Grid.Column="0" Grid.Row="1" IsTextSearchEnabled="True" SelectionChanged="LeftSide_SelectedItemChanged" ItemsSource="{Binding LeftSideList_ItemsSource}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" AlternationCount="2">
                    <SharedUI:ListBoxScroll.Resources>
                        <DataTemplate DataType="{x:Type global:PackageEditorWPF+IndexedName}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Index}" Foreground="Gray"/>
                                <TextBlock Text="{Binding Path=Name.Name}" Foreground="Black" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type Packages:ImportEntry}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=UIndex}" Foreground="Gray"/>
                                <TextBlock Text="{Binding Path=GetFullPath}" Foreground="Black" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type Packages:ExportEntry}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Text="{Binding Path=UIndex}" Foreground="Maroon" VerticalAlignment="Center"/>
                                <TextBlock Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Foreground="Black" Margin="5,0,0,0">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}_{1}">
                                            <Binding Path="GetFullPath" />
                                            <Binding Path="indexValue"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Grid.Column="1" Grid.Row="1" Foreground="BlueViolet" Margin="5,0,0,0" FontWeight="Bold" FontFamily="Consolas">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}{1}">
                                            <Binding Path="ClassName" />
                                            <Binding Path="." Converter="{StaticResource ObjectStructPropertyTypeConverter}" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </SharedUI:ListBoxScroll.Resources>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy name text" ToolTip="Copies the name text to the clipboard" Command="{Binding CopyNameCommand}"/>
                            <MenuItem Header="Add name" ToolTip="Add a name to this package" Command="{Binding AddNameCommand}" CommandParameter="FromNameView"/>
                            <MenuItem Header="Edit name" ToolTip="Edits the string this name represents" Command="{Binding EditNameCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>

                            <MenuItem Header="Reindex objects with this name" ToolTip="Reindexes all objects with this name, ensuring there are no duplicate indexes" Command="{Binding ReindexCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>


                            <MenuItem Header="Clone" ToolTip="Clone only this entry" Command="{Binding CloneCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <MenuItem Header="Clone Tree" ToolTip="Clone this entry and all children" Command="{Binding CloneTreeCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <MenuItem Header="Export..." Command="{Binding ExportImportDataVisibilityCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <MenuItem Header="Embedded file" Command="{Binding ExportEmbeddedFileCommand}" ToolTip="{Binding Converter={StaticResource EmbeddedFileToolTipConverter}, ConverterParameter='Export'}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <MenuItem Header="Complete export data" Command="{Binding ExportAllDataCommand}" ToolTip="Export all export data (properties + binary) to a .bin file" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <MenuItem Header="Binary data only" Command="{Binding ExportBinaryDataCommand}" ToolTip="Export only binary data (bytes after properties) to a .bin file" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </MenuItem>
                            <MenuItem Header="Import..." Command="{Binding ExportImportDataVisibilityCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <MenuItem Header="Embedded file" Command="{Binding ExportEmbeddedFileCommand}" ToolTip="{Binding Converter={StaticResource EmbeddedFileToolTipConverter}, ConverterParameter='Export'}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <MenuItem Header="Complete export data" Command="{Binding ImportAllDataCommand}" ToolTip="Import a .bin file and replace the contents of this export" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <MenuItem Header="Binary data only" Command="{Binding ImportBinaryDataCommand}" ToolTip="Import a .bin file and replace only the binary section of this export" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </SharedUI:ListBoxScroll>
                <!-- VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" -->
                <TreeView x:Name="LeftSide_TreeView" Grid.Column="0" Grid.Row="1" FontFamily="Consolas" Visibility="Collapsed" dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" ItemsSource="{Binding AllTreeViewNodesX}" >
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type global:TreeViewEntry}" ItemsSource="{Binding Sublinks}">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Orientation="Horizontal">
                                    <Image Width="16" Height="16" Source="{Binding Entry, Converter={StaticResource EntryFileTypeIconPathConverter}}" Visibility="{Binding Entry, Converter={StaticResource EntryFileTypeConverter}}" />
                                    <TextBlock Margin="{Binding Path=TreeViewMargin,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=global:PackageEditorWPF}}" Text="{Binding DisplayName}" Foreground="{Binding Path=ForegroundColor}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Entry.EntryHasPendingChanges}" Value="true">
                                                        <Setter Property="Background" Value="Yellow"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                </StackPanel>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <ei:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />

                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                            <Setter Property="vhelp:TreeViewItemHelper.BringSelectedItemIntoView" Value="True" />
                            <Setter Property="vhelp:TreeViewItemHelper.BringExpandedChildrenIntoView" Value="True" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Reindex objects with this name" ToolTip="Reindexes all objects with this name, ensuring there are no duplicate indexes" Command="{Binding ReindexCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <MenuItem Header="Clone" Command="{Binding CloneCommand}"/>
                            <MenuItem Header="Clone Tree" Command="{Binding CloneTreeCommand}"/>
                            <MenuItem Header="Package utilities">
                                <MenuItem Header="Generate new GUID for package" ToolTip="Generates a new GUID for this package. Only use this if you really know what you're doing." Command="{Binding CreateNewPackageGUIDCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <MenuItem Header="Set as filename package" ToolTip="Sets the name of this export to the same as the file." Command="{Binding SetPackageAsFilenamePackageCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            </MenuItem>
                            <MenuItem Header="Trash export and children" ToolTip="Converts this export and its children into empty data" Command="{Binding TrashCommand}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                            <MenuItem Header="Export..." IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                                <MenuItem Header="Embedded file" Command="{Binding ExportEmbeddedFileCommand}" ToolTip="{Binding Converter={StaticResource EmbeddedFileToolTipConverter}, ConverterParameter='Export'}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <MenuItem Header="Complete export data"  Command="{Binding ExportAllDataCommand}" ToolTip="Export all export data (properties + binary) to a .bin file"/>
                                <MenuItem Header="Binary data only"   Command="{Binding ExportBinaryDataCommand}" ToolTip="Export only binary data (bytes after properties) to a .bin file"/>
                            </MenuItem>
                            <MenuItem Header="Import..." IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                                <MenuItem Header="Embedded file" Command="{Binding ImportEmbeddedFileCommand}" ToolTip="{Binding Converter={StaticResource EmbeddedFileToolTipConverter}, ConverterParameter='Import'}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <MenuItem Header="Complete export data"  Command="{Binding ImportAllDataCommand}" ToolTip="Import a .bin file and replace the contents of this export"/>
                                <MenuItem Header="Binary data only"  Command="{Binding ImportBinaryDataCommand}" ToolTip="Import a .bin file and replace only the binary section of this export"/>
                            </MenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <i:Interaction.Behaviors>
                        <vhelp:TreeViewHelper BoundSelectedItem="{Binding SelectedItem}" />
                    </i:Interaction.Behaviors>
                </TreeView>
                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Grid.Row="1"/>
                <TabControl Name="EditorTabs" Grid.Column="2" Grid.Row="1">
                    <TabItem Name="Intro_Tab" Header="Welcome">
                        <StackPanel>
                            <TextBlock Margin="5" Text="Welcome to Package Editor WPF, the rewritten version of Package Editor" FontWeight="Bold"/>
                            <TextBlock Margin="5">
                            Package Editor WPF is a bit different from the classic Package Editor.
                                <LineBreak/>
                                Indexes are done strictly by UIndex, which is how they appear in game code. 
                                <LineBreak/>
                                <LineBreak/>
                            This means:
                                <LineBreak/>
                                -  Export references will be incremented by 1 from what you have seen in Package Editor
                            <LineBreak/>
                                -  Import references will remain the same
                             <LineBreak/>
                             <LineBreak/>
                            Additionally the order of entries will appear different as they now reflect
                            <LineBreak/>
                            the order of the data stored in game files.
                            <LineBreak/>
                            <LineBreak/>
                            Package Editor WPF is still in development - the tool is very complex,
                            <LineBreak/>
                            and will take some time for development to complete.
                            </TextBlock>

                            <Grid HorizontalAlignment="Left" Margin="20" Visibility="{Binding Pcc, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="280"/>
                                    <ColumnDefinition Width="280"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Recently opened items" Grid.Row="0" Grid.ColumnSpan="5" TextAlignment="Center" FontSize="20" FontWeight="Light" Margin="10"/>
                                <Button Name="RecentButton1" Content="Item" Grid.Row="1" Grid.Column="0" Margin="3" Padding="3"/>
                                <Button Name="RecentButton2" Content="Item" Grid.Row="1" Grid.Column="1" Margin="3" Padding="3"/>
                                <Button Name="RecentButton3" Content="Item" Grid.Row="2" Grid.Column="0" Margin="3" Padding="3"/>
                                <Button Name="RecentButton4" Content="Item" Grid.Row="2" Grid.Column="1" Margin="3" Padding="3"/>
                                <Button Name="RecentButton5" Content="Item" Grid.Row="3" Grid.Column="0" Margin="3" Padding="3"/>
                                <Button Name="RecentButton6" Content="Item" Grid.Row="3" Grid.Column="1" Margin="3" Padding="3"/>
                                <Button Name="RecentButton7" Content="Item" Grid.Row="4" Grid.Column="0" Margin="3" Padding="3"/>
                                <Button Name="RecentButton8" Content="Item" Grid.Row="4" Grid.Column="1" Margin="3" Padding="3"/>
                                <Button Name="RecentButton9" Content="Item" Grid.Row="5" Grid.Column="0" Margin="3" Padding="3"/>
                                <Button Name="RecentButton10" Content="Item" Grid.Row="5" Grid.Column="1" Margin="3" Padding="3"/>
                            </Grid>
                        </StackPanel>
                    </TabItem>
                    <!--<TabItem Name="Properties_Tab" Header="Properties"/>-->
                    <TabItem Name="Interpreter_Tab" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <TabItem.Header>
                            <TextBlock Text="Interpreter" ToolTip="Edit UnrealScript properties on exports"/>
                        </TabItem.Header>
                        <global:InterpreterWPF x:Name="InterpreterTab_Interpreter"/>
                    </TabItem>
                    <TabItem Name="Metadata_Tab" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <TabItem.Header>
                            <TextBlock Text="Metadata" ToolTip="Edit entry metadata such as class, object name, etc"/>
                        </TabItem.Header>
                        <metadataeditor:MetadataEditorWPF x:Name="MetadataTab_MetadataEditor"/>
                    </TabItem>
                    <TabItem Name="Bio2DAViewer_Tab" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <TabItem.Header>
                            <TextBlock Text="Bio2DA" ToolTip="View (someday, edit) Bio2DA tables"/>
                        </TabItem.Header>
                        <global:Bio2DAEditorWPF x:Name="Bio2DATab_Bio2DAEditor"/>
                    </TabItem>
                    <TabItem Name="BinaryInterpreter_Tab" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <TabItem.Header>
                            <TextBlock Text="Binary Interpreter" ToolTip="View and edit binary data for supported classes"/>
                        </TabItem.Header>
                        <global:BinaryInterpreterWPF x:Name="BinaryInterpreterTab_BinaryInterpreter"/>
                    </TabItem>
                    <TabItem Name="Script_Tab" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <TabItem.Header>
                            <TextBlock Text="Script" ToolTip="View and edit UnrealScript functions"/>
                        </TabItem.Header>
                        <global:UnrealScriptWPF x:Name="ScriptTab_UnrealScriptEditor"/>
                    </TabItem>
                    <TabItem Name="CurveEditor_Tab" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <TabItem.Header>
                            <TextBlock Text="Curve Editor" ToolTip="Edit curves"/>
                        </TabItem.Header>
                        <CurveEd:CurveEditor x:Name="CurveTab_CurveEditor"/>
                    </TabItem>
                    <TabItem Name="Sound_Tab" IsEnabled="{Binding Pcc, Converter={StaticResource NullEnabledConverter}}">
                        <TabItem.Header>
                            <TextBlock Text="Sound" ToolTip="Edit and play audio"/>
                        </TabItem.Header>
                        <global:Soundpanel x:Name="SoundTab_Soundpanel"/>
                    </TabItem>
                </TabControl>
            </Grid>
        </DockPanel>
    </xctk:BusyIndicator>
</global:WPFBase>

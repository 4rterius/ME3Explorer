<local:ExportLoaderControl x:Class="ME3Explorer.Soundpanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:ME3Explorer"
             xmlns:unrealclasses="clr-namespace:ME3Explorer.Unreal.Classes"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
                                        Loaded="Soundpanel_Loaded"
                           Unloaded="Soundpanel_Unloaded"

             xmlns:properties="clr-namespace:ME3Explorer.Properties"
             xmlns:Converters="clr-namespace:ME3Explorer.SharedUI.Converters"
             xmlns:soundplorer="clr-namespace:ME3Explorer.Soundplorer"
                           xmlns:hb1="clr-namespace:Be.Windows.Forms;assembly=Be.Windows.Forms.HexBox"
                           mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:FriendlyTimeConverter x:Key="FriendlyTimeConverter"/>
        <Converters:WwiseDataExchangeEnabledConverter x:Key="WwiseDataExchangeEnabledConverter"/>
        <soundplorer:HIRCObjectTypeConverter x:Key="HIRCObjectTypeConverter"/>
        <soundplorer:HIRCSoundTypeConverter x:Key="HIRCSoundTypeConverter"/>
        <soundplorer:HIRCMediaFetchTypeConverter x:Key="HIRCMediaFetchTypeConverter"/>
        <soundplorer:HIRCObjectTypeVisibilityConverter x:Key="HIRCObjectTypeVisibilityConverter"/>
        <Converters:FontAwesomeStateColorConverter x:Key="FontAwesomeStateColorConverter"/>
        <Converters:UnsavedChangesForegroundConverter x:Key="UnsavedChangesForegroundConverter"/>
        <Converters:EntryTypeBooleanConverter x:Key="EntryTypeBooleanConverter"/>
    </UserControl.Resources>
    <TabControl Name="SoundPanel_TabsControl">
        <TabItem Header="Player" Name="SoundPanel_PlayerTab">
            <Grid Margin="0,0,0,8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="48"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <!--<TextBox Name="infoTextBox" Text="Select an export" Grid.Column="0" Grid.Row="0"/>-->
                <ListBox Name="ExportInfoListBox" Grid.Column="0" Grid.Row="0" ItemsSource="{Binding ExportInformationList}" PreviewKeyDown="WEMItem_KeyDown" MouseDoubleClick="ExportInfoListBox_DoubleClick">
                    <ListBox.Resources>
                        <DataTemplate DataType="{x:Type s:String}">
                            <TextBlock Text="{Binding}" Foreground="Gray"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type local:EmbeddedWEMFile}">
                            <!-- Do not remove transparent background. It is required for mouse hit testing.-->
                            <TextBlock Text="{Binding DisplayString}" Foreground="DarkBlue"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type soundplorer:ISBankEntry}">
                            <!-- Do not remove transparent background. It is required for mouse hit testing.-->
                            <TextBlock Text="{Binding DisplayString}" Foreground="DarkBlue"/>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
                <DockPanel Grid.Column="0" Grid.Row="1" Margin="0,0,5,0">
                    <Button Name="Button1" DockPanel.Dock="Right"
            Background="Transparent" BorderBrush="Transparent"
            Click="RepeatingButton_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <ContentPresenter Content="{TemplateBinding Content}"/>
                            </ControlTemplate>
                        </Button.Template>
                        <fa:ImageAwesome Icon="Repeat" Height="16" Width="16" Foreground="{Binding Source={x:Static properties:Settings.Default}, Path=SoundpanelRepeating, Mode=TwoWay, Converter={StaticResource FontAwesomeStateColorConverter}}" ToolTip="Repeat"/>
                    </Button>
                    <Slider  Margin="5" Minimum="0" Maximum="{Binding CurrentTrackLength, Mode=OneWay}" Value="{Binding CurrentTrackPosition, Mode=TwoWay}" x:Name="SeekbarControl" IsMoveToPointEnabled="True" VerticalAlignment="Center"
                ValueChanged="Seekbar_ValueChanged"
                    HorizontalAlignment="Stretch"
                Thumb.DragStarted="Seekbar_DragStarted"
                Thumb.DragCompleted="Seekbar_DragCompleted"/>

                </DockPanel>
                <Grid HorizontalAlignment="Center" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="48"/>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="16"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="2" VerticalAlignment="Center">
                        <Button Content="Replace" ToolTip="Change audio by importing a Wave file" Command="{Binding ReplaceAudioCommand}" VerticalContentAlignment="Center" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <Button Content="Export" ToolTip="Export audio to Wave file" VerticalContentAlignment="Center" VerticalAlignment="Center" Margin="0,8,5,0" Command="{Binding ExportAudioCommand}"/>
                    </StackPanel>
                    <Button Grid.Column="3" ToolTip="Start or pause playback" Command="{Binding StartPlaybackCommand}">
                        <fa:ImageAwesome Icon="{Binding PlayPauseIcon}" Height="24" Width="24"/>
                    </Button>
                    <Button Grid.Column="5" ToolTip="Stop playback" Command="{Binding StopPlaybackCommand}">
                        <fa:ImageAwesome Icon="Stop" Height="24" Width="24"/>
                    </Button>

                    <StackPanel Grid.Column="6" Grid.Row="1" Margin="5,0,0,0" VerticalAlignment="Center">
                        <TextBlock Margin="6,0,0,0">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} / {1}">
                                    <Binding Path="CurrentTrackPosition" Converter="{StaticResource FriendlyTimeConverter}"/>
                                    <Binding Path="CurrentTrackLength" Converter="{StaticResource FriendlyTimeConverter}"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <StackPanel Orientation="Horizontal" Margin="0,7,0,0">
                            <Slider Width="60" Margin="0,0,5,0" Minimum="0" Maximum="1" Value="{Binding CurrentVolume, Mode=TwoWay}" x:Name="VolumebarControl" VerticalAlignment="Center"  IsMoveToPointEnabled="True">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="ValueChanged">
                                        <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Slider>
                            <fa:ImageAwesome Icon="VolumeUp" Height="16" Width="16"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>

            </Grid>
        </TabItem>
        <TabItem Header="Bank Info" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource EntryTypeBooleanConverter}, ConverterParameter=WwiseBank}">
            <TextBox Text="{Binding QuickScanText}" IsReadOnly="True" VerticalScrollBarVisibility="Auto"/>
        </TabItem>
        <TabItem Header="HIRCs" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource EntryTypeBooleanConverter}, ConverterParameter=WwiseBank}">
            <DockPanel LastChildFill="True">
                <StatusBar Height="23" DockPanel.Dock="Bottom" Width="Auto">
                    <StatusBarItem>
                        <TextBlock Name="HIRCStatusBar_LeftMostText" Text="Nothing selected"/>
                    </StatusBarItem>
                </StatusBar>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="200*"/>
                        <RowDefinition Height="3" MinHeight="3"/>
                        <RowDefinition MinHeight="230"/>
                    </Grid.RowDefinitions>

                    <ListBox ItemsSource="{Binding HIRCObjects}" Name="HIRC_ListBox" SelectionChanged="HIRC_ListBox_SelectionChanged" Grid.Row="0" Grid.ColumnSpan="3">
                        <ListBox.Resources>
                            <DataTemplate DataType="{x:Type unrealclasses:WwiseBank+HIRCObject}">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding Index}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                    <StackPanel>
                                        <TextBlock Text="{Binding ID,StringFormat='HIRC 0x{0:X8}'}"/>
                                        <TextBlock Text="{Binding Path=ObjType, Converter={StaticResource HIRCObjectTypeConverter}}" FontStyle="Italic"/>
                                        <Border Margin="0" Padding="2,0,2,0" BorderThickness="1" BorderBrush="Red" Background="AntiqueWhite" CornerRadius="2" HorizontalAlignment="Left" Visibility="{Binding Converter={StaticResource HIRCObjectTypeVisibilityConverter},ConverterParameter=2}">
                                            <TextBlock Text="{Binding State,Converter={StaticResource HIRCMediaFetchTypeConverter}}" FontWeight="Bold"/>
                                        </Border>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.Resources>
                    </ListBox>
                    <GridSplitter Grid.Column="0" Grid.ColumnSpan="3" 
                      Grid.Row="1" HorizontalAlignment="Stretch" 
                      Margin="0,-5"
                      BorderThickness="0,5"
                      BorderBrush="Transparent"
                      Panel.ZIndex="60"/>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="220" MaxWidth="718" Width="285" Name="HexboxColumnDefinition" />
                            <ColumnDefinition Width="3" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="27" MinHeight="27" Height="27"/>
                            <RowDefinition MinHeight="200"/>
                        </Grid.RowDefinitions>
                        <ToolBar ToolBarTray.IsLocked="True" DockPanel.Dock="Top" Grid.Row="0" Grid.ColumnSpan="3">
                            <Button Name="SaveHexChange_Button" ToolTip="Commit hex changes to the HIRC (and export)" Content="Save Hex Changes" Foreground="{Binding HasUnsavedChanges, Converter={StaticResource UnsavedChangesForegroundConverter}}" Click="HIRC_SaveHexChanges_Click" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}"/>
                            <Button Name="ToggleHexboxWidth_Button" Content="Toggle Hexbox Width" ToolTip="Toggle between 4 and 16 byte widths" Click="HIRC_ToggleHexboxWidth_Click"/>
                            <Separator Name="SaveToggle_Separator" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                        </ToolBar>
                        <WindowsFormsHost Name="HIRC_Hexbox_Host" Grid.Row="1" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="220" MaxWidth="718">
                            <hb1:HexBox MinBytesPerLine="4" MaxBytesPerLine="16" MinimumSize="200,50" ColumnInfoVisible="True" LineInfoVisible="True" Font="Courier New,10" BoldFont="Consolas,10" StringViewVisible="True" SelectionStartChanged="Soundpanel_HIRCHexbox_SelectionChanged" VScrollBarVisible="True">
                            </hb1:HexBox>
                        </WindowsFormsHost>
                        <GridSplitter Grid.Column="1" 
                      Grid.Row="1" HorizontalAlignment="Stretch" 
                      Margin="-5,0"
                      BorderThickness="5,0"
                      BorderBrush="Transparent"
                      Panel.ZIndex="60"/>
                        <Label Name="TempLabel" Grid.Column="2"  Grid.Row="1">Select a HIRC to get started</Label>
                    </Grid>
                    
                </Grid>
            </DockPanel>
        </TabItem>
    </TabControl>
</local:ExportLoaderControl>

//This class was generated by ME3Explorer
//Author: Warranty Voider
//URL: http://sourceforge.net/projects/me3explorer/
//URL: http://me3explorer.freeforums.org/
//URL: http://www.facebook.com/pages/Creating-new-end-for-Mass-Effect-3/145902408865659
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using ME3Explorer.Unreal;
using ME3Explorer.Packages;

namespace ME3Explorer.Unreal.Classes
{
    public class BioAnimSetData
    {
        #region Unreal Props

        //Bool Properties

        public bool bAnimRotationOnly;
        //Array Properties

        public List<string> TrackBoneNames;
        public List<string> UseTranslationBoneNames;

        #endregion

        public ExportEntry Export;
        public IMEPackage pcc;
        public byte[] data;

        public BioAnimSetData(ExportEntry export)
        {
            pcc = export.FileRef;
            Export = export;
            data = export.Data;
            PropertyCollection props = export.GetProperties();
            bAnimRotationOnly = props.GetPropOrDefault<BoolProperty>("bAnimRotationOnly").Value;
            TrackBoneNames = props.GetPropOrDefault<ArrayProperty<NameProperty>>("TrackBoneNames").Select(n => n.Value.Instanced).ToList();
            UseTranslationBoneNames = props.GetPropOrDefault<ArrayProperty<NameProperty>>("UseTranslationBoneNames").Select(n => n.Value.Instanced).ToList();
        }


        public TreeNode ToTree()
        {
            TreeNode res = new TreeNode($"{Export.ObjectName.Instanced}(#{Export.UIndex})");
            res.Nodes.Add($"bAnimRotationOnly : {bAnimRotationOnly}");
            res.Nodes.Add(TBNToTree());
            res.Nodes.Add(UTBNToTree());
            return res;
        }

        public TreeNode TBNToTree()
        {
            TreeNode res = new TreeNode("TrackBoneNames");
            int count = 0;
            foreach (string s in TrackBoneNames)
                res.Nodes.Add($"{count++} : {s}");
            return res;
        }

        public TreeNode UTBNToTree()
        {
            TreeNode res = new TreeNode("UseTranslationBoneNames");
            int count = 0;
            foreach (string s in UseTranslationBoneNames)
                res.Nodes.Add($"{count++} : {s}");
            return res;
        }

    }
}
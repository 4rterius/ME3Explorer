<global:ExportLoaderControl x:Class="ME3Explorer.BinaryInterpreterWPF"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        mc:Ignorable="d" 
        xmlns:Commands="clr-namespace:ME3Explorer.Commands"
        xmlns:hb1="clr-namespace:Be.Windows.Forms;assembly=Be.Windows.Forms.HexBox"
        xmlns:global="clr-namespace:ME3Explorer"
        xmlns:Converters="clr-namespace:ME3Explorer.SharedUI.Converters"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        d:DesignHeight="450" d:DesignWidth="800"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        Loaded="BinaryInterpreter_Loaded"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <Converters:NullEnabledConverter x:Key="NullEnabledConverter"/>
        <Converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </UserControl.Resources>
    <!--<UserControl.CommandBindings>
        <CommandBinding Command="Commands:InterpreterWPFCommands.ArrayOrderByValueCommand" Executed="ArrayOrderByValueCommand_Executed"/>
        <CommandBinding Command="Commands:InterpreterWPFCommands.RemovePropertyCommand" Executed="RemovePropertyCommand_Executed"/>
    </UserControl.CommandBindings>-->
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <StackPanel Name="OnDemand_Panel" HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock Name="OnDemand_Title_TextBlock" Text="This export is larger than 20KB" HorizontalAlignment="Center" FontSize="16" FontWeight="Bold" />
            <TextBlock Name="OnDemand_Subtext_TextBlock" Text="Large exports are not automatically parsed to improve performance" HorizontalAlignment="Center"/>
            <Button Name="ParseBinary_Button" Content="Parse binary" HorizontalAlignment="Center" Margin="5" Padding="3" Click="ParseBinary_Button_Click"/>
            <fa:ImageAwesome  Name="ParseBinary_Spinner" Grid.Column="7" Icon="Spinner" Spin="True" SpinDuration="2" Width="24" Height="24" Margin="5"/>
        </StackPanel>
        <DockPanel Name="LoadedContent_Panel">
            <ToolBar DockPanel.Dock="Top" ToolBarTray.IsLocked="True">
                <Button Name="SaveHexChange_Button" Content="Save Hex Changes" Click="BinaryInterpreter_SaveHexChanges_Click" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}"/>
                <TextBlock Text="Changes not yet saved" VerticalAlignment="Center" Foreground="Red" Visibility="Collapsed"/>
                <Button Content="Toggle Hexbox Width" Click="BinaryInterpreter_ToggleHexboxWidth_Click"/>
                <ComboBox Name="viewModeComboBox" Height="22" Margin="0" VerticalAlignment="Top" Width="120" SelectionChanged="viewModeComboBox_SelectionChanged"/>
                <!--<Button Content="Add Property" Click="Interpreter_AddProperty_Click" IsEnabled="{Binding CurrentLoadedExport, Converter={StaticResource NullEnabledConverter}}"/>-->
            </ToolBar>
            <StatusBar Height="23" DockPanel.Dock="Bottom" Name="BinaryInterpreter_StatusBar">
                <StatusBarItem>
                    <TextBlock Name="StatusBar_LeftMostText" Text="Nothing selected"/>
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock Foreground="Brown" Text="{Binding SelectedFileOffset, StringFormat='File Offset: {0}'}" Visibility="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Copy offset" ToolTip="Copy the current file offset to the clipboard" Command="{Binding CopyOffsetCommand}"/>
                            </ContextMenu>
                        </TextBlock.ContextMenu>
                    </TextBlock>
                </StatusBarItem>
            </StatusBar>
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <Grid Margin="0,1,0,-1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="220" MaxWidth="718" Width="285" Name="HexboxColumnDefinition" />
                        <ColumnDefinition Width="1" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--<control:HexEditor Name="Interpreter_HexBox" Grid.Column="0" Grid.Row="1" Width="Auto" Height="Auto" BytePerLine="4" AllowAutoHightLighSelectionByte="False" StatusBarVisibility="Collapsed" AllowDeleteByte="True" AllowExtend="True" />-->
                    <WindowsFormsHost Name="BinaryInterpreter_Hexbox_Host" Grid.Row="10" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
                        <hb1:HexBox MinBytesPerLine="4" MaxBytesPerLine="16" ColumnInfoVisible="True" LineInfoVisible="True" Font="Courier New,10" BoldFont="Consolas,10" StringViewVisible="True" SelectionLengthChanged="hb1_SelectionChanged" SelectionStartChanged="hb1_SelectionChanged" VScrollBarVisible="True">
                        </hb1:HexBox>
                    </WindowsFormsHost>
                    <GridSplitter Grid.Column="1" 
                      Grid.Row="1" HorizontalAlignment="Stretch" 
                      Margin="-5,0"
                      BorderThickness="5,0"
                      BorderBrush="Transparent"
                      Panel.ZIndex="60"/>
                    <TreeView Name="BinaryInterpreter_TreeView" Grid.Row="1" Grid.Column="2" Width="Auto" FontFamily="Consolas" SelectedItemChanged="BinaryInterpreter_TreeViewSelectedItemChanged" PreviewMouseRightButtonDown="BinaryInterpreter_TreeView_PreviewMouseRightButtonDown" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsVirtualizing="True">
                        <TreeView.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type global:BinaryInterpreterWPFTreeViewItem}" ItemsSource="{Binding Items}">
                                <TextBlock Text="{Binding Path=Header}" />
                            </HierarchicalDataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type global:UPropertyTreeViewEntry}" ItemsSource="{Binding ChildrenProperties}">
                                <StackPanel x:Name="PropertyItem_Container" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="1">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="PropertyItem_DisplayName" Text="{Binding DisplayName}" VerticalAlignment="Center" FontStyle="Italic"/>
                                            <TextBlock x:Name="PropertyItem_EditableValue" Margin="5,0,0,0" Text="{Binding EditableValue}" VerticalAlignment="Center" FontWeight="Bold"/>
                                            <TextBlock x:Name="PropertyItem_ParsedValue" Margin="5,0,0,0" Text="{Binding ParsedValue}" VerticalAlignment="Center" FontStyle="Italic"/>
                                        </StackPanel>
                                        <TextBlock x:Name="PropertyItem_DisplayType" Text="{Binding PropertyType}" VerticalAlignment="Center" Margin="5,0,0,0"/>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                                <ei:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </StackPanel>
                                </StackPanel>
                                <HierarchicalDataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="ObjectProperty">
                                        <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#6d6c3f"/>-->
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#6d6c3f"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88fffec4"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="IntProperty">
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#664f46"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#AAffeae2"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="StringProperty">
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#374f46"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#e2fff4"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="ArrayProperty">
                                        <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#382c4c"/>-->
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#382c4c"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#d3bef4"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="BoolProperty">
                                        <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#43563a"/>-->
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#43563a"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88ecffe2"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="StructProperty">
                                        <!--<Setter TargetName="PropertyItem_DisplayValue" Property="Foreground" Value="#593953"/>-->
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#593953"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88f4beea"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="ByteProperty">
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#474647"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88afaeaf"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="NameProperty">
                                        <!--<Setter TargetName="PropertyItem_EditorSet" Property="ContentTemplate" Value="{StaticResource EditorSet_NamePropertyTemplate}"/>-->
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#4a5568"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88e2edff"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PropertyType}" Value="None">
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="#6d4818"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="#88ffb759"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding HasChanges}" Value="True">
                                        <Setter TargetName="PropertyItem_DisplayType" Property="Foreground" Value="Maroon"/>
                                        <Setter TargetName="PropertyItem_Container" Property="Background" Value="Yellow"/>
                                    </DataTrigger>
                                </HierarchicalDataTemplate.Triggers>
                            </HierarchicalDataTemplate>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"                      Color="Black" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"                      Color="LightBlue" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"                      Color="Black" />
                        </TreeView.Resources>
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <!--<Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />-->
                                <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>
</global:ExportLoaderControl>
